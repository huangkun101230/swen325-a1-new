{"version":3,"file":"ionic2-calendar.js","sources":["ng://ionic2-calendar/calendar.service.ts","ng://ionic2-calendar/monthview.ts","ng://ionic2-calendar/weekview.ts","ng://ionic2-calendar/dayview.ts","ng://ionic2-calendar/calendar.ts","ng://ionic2-calendar/init-position-scroll.ts","ng://ionic2-calendar/calendar.module.ts","ng://ionic2-calendar/ionic2-calendar.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\nimport {ICalendarComponent, IView, CalendarMode, QueryMode} from './calendar';\n\n@Injectable()\nexport class CalendarService {\n    queryMode: QueryMode;\n    currentDateChangedFromParent$: Observable<Date>;\n    currentDateChangedFromChildren$: Observable<Date>;\n    eventSourceChanged$: Observable<void>;\n    slideChanged$: Observable<number>;\n    slideUpdated$: Observable<void>;\n\n    private _currentDate: Date;\n    private currentDateChangedFromParent = new Subject<Date>();\n    private currentDateChangedFromChildren = new Subject<Date>();\n    private eventSourceChanged = new Subject<void>();\n    private slideChanged = new Subject<number>();\n    private slideUpdated = new Subject<void>();\n\n    constructor() {\n        this.currentDateChangedFromParent$ = this.currentDateChangedFromParent.asObservable();\n        this.currentDateChangedFromChildren$ = this.currentDateChangedFromChildren.asObservable();\n        this.eventSourceChanged$ = this.eventSourceChanged.asObservable();\n        this.slideChanged$ = this.slideChanged.asObservable();\n        this.slideUpdated$ = this.slideUpdated.asObservable();\n    }\n\n    setCurrentDate(val: Date, fromParent: boolean = false) {\n        this._currentDate = new Date(val);\n        if (fromParent) {\n            this.currentDateChangedFromParent.next(val);\n        } else {\n            this.currentDateChangedFromChildren.next(val);\n        }\n    }\n\n    get currentDate(): Date {\n        return this._currentDate;\n    }\n\n    rangeChanged(component: ICalendarComponent) {\n        if (this.queryMode === 'local') {\n            if (component.eventSource && component.onDataLoaded) {\n                component.onDataLoaded();\n            }\n        } else if (this.queryMode === 'remote') {\n            let rangeStart = new Date(component.range.startTime.getTime()),\n                rangeEnd = new Date(component.range.endTime.getTime());\n\n            rangeStart.setHours(0);\n            if (rangeStart.getHours() === 23) {\n                rangeStart.setTime(rangeStart.getTime() + 3600000);\n            }\n\n            rangeEnd.setHours(0);\n            if (rangeEnd.getHours() === 23) {\n                rangeEnd.setTime(rangeEnd.getTime() + 3600000);\n            }\n            component.onRangeChanged.emit({\n                startTime: rangeStart,\n                endTime: rangeEnd\n            });\n        }\n    }\n\n    private getStep(mode: CalendarMode): { years: number; months: number; days: number; } {\n        switch (mode) {\n            case 'month':\n                return {\n                    years: 0,\n                    months: 1,\n                    days: 0\n                };\n            case 'week':\n                return {\n                    years: 0,\n                    months: 0,\n                    days: 7\n                };\n            case 'day':\n                return {\n                    years: 0,\n                    months: 0,\n                    days: 1\n                };\n        }\n    }\n\n    getAdjacentCalendarDate(mode: CalendarMode, direction: number): Date {\n        let calculateCalendarDate = this.currentDate;\n        const step = this.getStep(mode),\n            year = calculateCalendarDate.getFullYear() + direction * step.years,\n            month = calculateCalendarDate.getMonth() + direction * step.months,\n            date = calculateCalendarDate.getDate() + direction * step.days;\n\n        calculateCalendarDate = new Date(year, month, date, 12, 0, 0);\n\n        if (mode === 'month') {\n            const firstDayInNextMonth = new Date(year, month + 1, 1, 12, 0, 0);\n            if (firstDayInNextMonth.getTime() <= calculateCalendarDate.getTime()) {\n                calculateCalendarDate = new Date(firstDayInNextMonth.getTime() - 24 * 60 * 60 * 1000);\n            }\n        }\n        return calculateCalendarDate;\n    }\n\n    getAdjacentViewStartTime(component: ICalendarComponent, direction: number): Date {\n        let adjacentCalendarDate = this.getAdjacentCalendarDate(component.mode, direction);\n        return component.getRange(adjacentCalendarDate).startTime;\n    }\n\n    populateAdjacentViews(component: ICalendarComponent) {\n        let currentViewStartDate: Date,\n            currentViewData: IView[],\n            toUpdateViewIndex: number,\n            currentViewIndex = component.currentViewIndex;\n\n        if (component.direction === 1) {\n            currentViewStartDate = this.getAdjacentViewStartTime(component, 1);\n            toUpdateViewIndex = (currentViewIndex + 1) % 3;\n            component.views[toUpdateViewIndex] = component.getViewData(currentViewStartDate);\n        } else if (component.direction === -1) {\n            currentViewStartDate = this.getAdjacentViewStartTime(component, -1);\n            toUpdateViewIndex = (currentViewIndex + 2) % 3;\n            component.views[toUpdateViewIndex] = component.getViewData(currentViewStartDate);\n        } else {\n            if (!component.views) {\n                currentViewData = [];\n                currentViewStartDate = component.range.startTime;\n                currentViewData.push(component.getViewData(currentViewStartDate));\n                currentViewStartDate = this.getAdjacentViewStartTime(component, 1);\n                currentViewData.push(component.getViewData(currentViewStartDate));\n                currentViewStartDate = this.getAdjacentViewStartTime(component, -1);\n                currentViewData.push(component.getViewData(currentViewStartDate));\n                component.views = currentViewData;\n            } else {\n                currentViewStartDate = component.range.startTime;\n                component.views[currentViewIndex] = component.getViewData(currentViewStartDate);\n                currentViewStartDate = this.getAdjacentViewStartTime(component, -1);\n                toUpdateViewIndex = (currentViewIndex + 2) % 3;\n                component.views[toUpdateViewIndex] = component.getViewData(currentViewStartDate);\n                currentViewStartDate = this.getAdjacentViewStartTime(component, 1);\n                toUpdateViewIndex = (currentViewIndex + 1) % 3;\n                component.views[toUpdateViewIndex] = component.getViewData(currentViewStartDate);\n            }\n        }\n    }\n\n    loadEvents() {\n        this.eventSourceChanged.next();\n    }\n\n    slide(direction: number) {\n        this.slideChanged.next(direction);\n    }\n\n    update() {\n        this.slideUpdated.next();\n    }\n}\n","import {\n    Component,\n    OnInit,\n    OnChanges,\n    Input,\n    Output,\n    EventEmitter,\n    SimpleChanges,\n    ViewChild,\n    TemplateRef,\n    OnDestroy,\n    AfterViewInit\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {DatePipe} from '@angular/common';\nimport {IonSlides} from '@ionic/angular';\n\nimport {ICalendarComponent, IEvent, IMonthView, IMonthViewRow, ITimeSelected, IRange, CalendarMode, IDateFormatter} from './calendar';\nimport {CalendarService} from './calendar.service';\nimport {IMonthViewDisplayEventTemplateContext} from './calendar';\n\n@Component({\n    selector: 'monthview',\n    template: `\n        <div>\n            <ion-slides #monthSlider [options]=\"sliderOptions\" [dir]=\"dir\" (ionSlideDidChange)=\"onSlideChanged()\">\n                <ion-slide>\n                    <table *ngIf=\"0===currentViewIndex\" class=\"table table-bordered table-fixed monthview-datetable\">\n                        <thead>\n                        <tr>\n                            <th *ngFor=\"let dayHeader of views[0].dayHeaders\">\n                                <small>{{dayHeader}}</small>\n                            </th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr *ngFor=\"let row of [0,1,2,3,4,5]\">\n                            <td *ngFor=\"let col of [0,1,2,3,4,5,6]\" tappable (click)=\"select(views[0].dates[row*7+col])\"\n                                [ngClass]=\"getHighlightClass(views[0].dates[row*7+col])\">\n                                <ng-template [ngTemplateOutlet]=\"monthviewDisplayEventTemplate\"\n                                             [ngTemplateOutletContext]=\"{view: views[0], row: row, col: col}\">\n                                </ng-template>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                    <table *ngIf=\"0!==currentViewIndex\" class=\"table table-bordered table-fixed monthview-datetable\">\n                        <thead>\n                        <tr class=\"text-center\">\n                            <th *ngFor=\"let dayHeader of views[0].dayHeaders\">\n                                <small>{{dayHeader}}</small>\n                            </th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr *ngFor=\"let row of [0,1,2,3,4,5]\">\n                            <td *ngFor=\"let col of [0,1,2,3,4,5,6]\">\n                                <ng-template [ngTemplateOutlet]=\"monthviewInactiveDisplayEventTemplate\"\n                                             [ngTemplateOutletContext]=\"{view: views[0], row: row, col: col}\">\n                                </ng-template>\n                            </td>\n                        <tr>\n                        </tbody>\n                    </table>\n                </ion-slide>\n                <ion-slide>\n                    <table *ngIf=\"1===currentViewIndex\" class=\"table table-bordered table-fixed monthview-datetable\">\n                        <thead>\n                        <tr>\n                            <th *ngFor=\"let dayHeader of views[1].dayHeaders\">\n                                <small>{{dayHeader}}</small>\n                            </th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr *ngFor=\"let row of [0,1,2,3,4,5]\">\n                            <td *ngFor=\"let col of [0,1,2,3,4,5,6]\" tappable (click)=\"select(views[1].dates[row*7+col])\"\n                                [ngClass]=\"getHighlightClass(views[1].dates[row*7+col])\">\n                                <ng-template [ngTemplateOutlet]=\"monthviewDisplayEventTemplate\"\n                                             [ngTemplateOutletContext]=\"{view: views[1], row: row, col: col}\">\n                                </ng-template>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                    <table *ngIf=\"1!==currentViewIndex\" class=\"table table-bordered table-fixed monthview-datetable\">\n                        <thead>\n                        <tr class=\"text-center\">\n                            <th *ngFor=\"let dayHeader of views[1].dayHeaders\">\n                                <small>{{dayHeader}}</small>\n                            </th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr *ngFor=\"let row of [0,1,2,3,4,5]\">\n                            <td *ngFor=\"let col of [0,1,2,3,4,5,6]\">\n                                <ng-template [ngTemplateOutlet]=\"monthviewInactiveDisplayEventTemplate\"\n                                             [ngTemplateOutletContext]=\"{view: views[1], row: row, col: col}\">\n                                </ng-template>\n                            </td>\n                        <tr>\n                        </tbody>\n                    </table>\n                </ion-slide>\n                <ion-slide>\n                    <table *ngIf=\"2===currentViewIndex\" class=\"table table-bordered table-fixed monthview-datetable\">\n                        <thead>\n                        <tr>\n                            <th *ngFor=\"let dayHeader of views[2].dayHeaders\">\n                                <small>{{dayHeader}}</small>\n                            </th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr *ngFor=\"let row of [0,1,2,3,4,5]\">\n                            <td *ngFor=\"let col of [0,1,2,3,4,5,6]\" tappable (click)=\"select(views[2].dates[row*7+col])\"\n                                [ngClass]=\"getHighlightClass(views[2].dates[row*7+col])\">\n                                <ng-template [ngTemplateOutlet]=\"monthviewDisplayEventTemplate\"\n                                             [ngTemplateOutletContext]=\"{view: views[2], row: row, col: col}\">\n                                </ng-template>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                    <table *ngIf=\"2!==currentViewIndex\" class=\"table table-bordered table-fixed monthview-datetable\">\n                        <thead>\n                        <tr class=\"text-center\">\n                            <th *ngFor=\"let dayHeader of views[2].dayHeaders\">\n                                <small>{{dayHeader}}</small>\n                            </th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr *ngFor=\"let row of [0,1,2,3,4,5]\">\n                            <td *ngFor=\"let col of [0,1,2,3,4,5,6]\">\n                                <ng-template [ngTemplateOutlet]=\"monthviewInactiveDisplayEventTemplate\"\n                                             [ngTemplateOutletContext]=\"{view: views[2], row: row, col: col}\">\n                                </ng-template>\n                            </td>\n                        <tr>\n                        </tbody>\n                    </table>\n                </ion-slide>\n            </ion-slides>\n            <ng-template [ngTemplateOutlet]=\"monthviewEventDetailTemplate\"\n                         [ngTemplateOutletContext]=\"{showEventDetail:showEventDetail, selectedDate: selectedDate, noEventsLabel: noEventsLabel}\">\n            </ng-template>\n        </div>\n    `,\n    styles: [`\n        .text-muted {\n            color: #999;\n        }\n\n        .table-fixed {\n            table-layout: fixed;\n        }\n\n        .table {\n            width: 100%;\n            max-width: 100%;\n            background-color: transparent;\n        }\n\n        .table > thead > tr > th, .table > tbody > tr > th, .table > tfoot > tr > th, .table > thead > tr > td,\n        .table > tbody > tr > td, .table > tfoot > tr > td {\n            padding: 8px;\n            line-height: 20px;\n            vertical-align: top;\n        }\n\n        .table > thead > tr > th {\n            vertical-align: bottom;\n            border-bottom: 2px solid #ddd;\n        }\n\n        .table > thead:first-child > tr:first-child > th, .table > thead:first-child > tr:first-child > td {\n            border-top: 0\n        }\n\n        .table > tbody + tbody {\n            border-top: 2px solid #ddd;\n        }\n\n        .table-bordered {\n            border: 1px solid #ddd;\n        }\n\n        .table-bordered > thead > tr > th, .table-bordered > tbody > tr > th, .table-bordered > tfoot > tr > th,\n        .table-bordered > thead > tr > td, .table-bordered > tbody > tr > td, .table-bordered > tfoot > tr > td {\n            border: 1px solid #ddd;\n        }\n\n        .table-bordered > thead > tr > th, .table-bordered > thead > tr > td {\n            border-bottom-width: 2px;\n        }\n\n        .table-striped > tbody > tr:nth-child(odd) > td, .table-striped > tbody > tr:nth-child(odd) > th {\n            background-color: #f9f9f9\n        }\n\n        .monthview-primary-with-event {\n            background-color: #3a87ad;\n            color: white;\n        }\n\n        .monthview-current {\n            background-color: #f0f0f0;\n        }\n\n        .monthview-selected {\n            background-color: #009900;\n            color: white;\n        }\n\n        .monthview-datetable td.monthview-disabled {\n            color: lightgrey;\n            cursor: default;\n        }\n\n        .monthview-datetable th {\n            text-align: center;\n        }\n\n        .monthview-datetable td {\n            cursor: pointer;\n            text-align: center;\n        }\n\n        .monthview-secondary-with-event {\n            background-color: #d9edf7;\n        }\n\n        ::-webkit-scrollbar,\n        *::-webkit-scrollbar {\n            display: none;\n        }\n    `]\n})\nexport class MonthViewComponent implements ICalendarComponent, OnInit, OnDestroy, OnChanges, AfterViewInit {\n\n    constructor(private calendarService: CalendarService) {\n    }\n    ;\n\n    @ViewChild('monthSlider', {static: true}) slider: IonSlides;\n\n    @Input() monthviewDisplayEventTemplate: TemplateRef<IMonthViewDisplayEventTemplateContext>;\n    @Input() monthviewInactiveDisplayEventTemplate: TemplateRef<IMonthViewDisplayEventTemplateContext>;\n    @Input() monthviewEventDetailTemplate: TemplateRef<IMonthViewDisplayEventTemplateContext>;\n\n    @Input() formatDay: string;\n    @Input() formatDayHeader: string;\n    @Input() formatMonthTitle: string;\n    @Input() eventSource: IEvent[];\n    @Input() startingDayMonth: number;\n    @Input() showEventDetail: boolean;\n    @Input() noEventsLabel: string;\n    @Input() autoSelect = true;\n    @Input() markDisabled: (date: Date) => boolean;\n    @Input() locale: string;\n    @Input() dateFormatter: IDateFormatter;\n    @Input() dir = '';\n    @Input() lockSwipeToPrev: boolean;\n    @Input() lockSwipes: boolean;\n    @Input() sliderOptions: any;\n\n    @Output() onRangeChanged = new EventEmitter<IRange>();\n    @Output() onEventSelected = new EventEmitter<IEvent>();\n    @Output() onTimeSelected = new EventEmitter<ITimeSelected>(true);\n    @Output() onTitleChanged = new EventEmitter<string>(true);\n\n    public views: IMonthView[] = [];\n    public currentViewIndex = 0;\n    public selectedDate: IMonthViewRow;\n    public range: IRange;\n    public mode: CalendarMode = 'month';\n    public direction = 0;\n\n    private moveOnSelected = false;\n    private inited = false;\n    private callbackOnInit = true;\n\n    private currentDateChangedFromParentSubscription: Subscription;\n    private eventSourceChangedSubscription: Subscription;\n    private slideChangedSubscription: Subscription;\n    private slideUpdatedSubscription: Subscription;\n\n    private formatDayLabel: (date: Date) => string;\n    private formatDayHeaderLabel: (date: Date) => string;\n    private formatTitle: (date: Date) => string;\n\n    static getDates(startDate: Date, n: number): Date[] {\n        const dates = new Array(n),\n            current = new Date(startDate.getTime());\n        let i = 0;\n        while (i < n) {\n            dates[i++] = new Date(current.getTime());\n            current.setDate(current.getDate() + 1);\n        }\n        return dates;\n    }\n\n    ngOnInit() {\n        if (!this.sliderOptions) {\n            this.sliderOptions = {};\n        }\n        this.sliderOptions.loop = true;\n\n        if (this.dateFormatter && this.dateFormatter.formatMonthViewDay) {\n            this.formatDayLabel = this.dateFormatter.formatMonthViewDay;\n        } else {\n            const dayLabelDatePipe = new DatePipe('en-US');\n            this.formatDayLabel = function(date: Date) {\n                return dayLabelDatePipe.transform(date, this.formatDay);\n            };\n        }\n\n        if (this.dateFormatter && this.dateFormatter.formatMonthViewDayHeader) {\n            this.formatDayHeaderLabel = this.dateFormatter.formatMonthViewDayHeader;\n        } else {\n            const datePipe = new DatePipe(this.locale);\n            this.formatDayHeaderLabel = function(date: Date) {\n                return datePipe.transform(date, this.formatDayHeader);\n            };\n        }\n\n        if (this.dateFormatter && this.dateFormatter.formatMonthViewTitle) {\n            this.formatTitle = this.dateFormatter.formatMonthViewTitle;\n        } else {\n            const datePipe = new DatePipe(this.locale);\n            this.formatTitle = function(date: Date) {\n                return datePipe.transform(date, this.formatMonthTitle);\n            };\n        }\n\n        if (this.lockSwipeToPrev) {\n            this.slider.lockSwipeToPrev(true);\n        }\n\n        if (this.lockSwipes) {\n            this.slider.lockSwipes(true);\n        }\n\n        this.refreshView();\n        this.inited = true;\n\n        this.currentDateChangedFromParentSubscription = this.calendarService.currentDateChangedFromParent$.subscribe(currentDate => {\n            this.refreshView();\n        });\n\n        this.eventSourceChangedSubscription = this.calendarService.eventSourceChanged$.subscribe(() => {\n            this.onDataLoaded();\n        });\n\n        this.slideChangedSubscription = this.calendarService.slideChanged$.subscribe(direction => {\n            if (direction === 1) {\n                this.slider.slideNext();\n            } else if (direction === -1) {\n                this.slider.slidePrev();\n            }\n        });\n\n        this.slideUpdatedSubscription = this.calendarService.slideUpdated$.subscribe(() => {\n            this.slider.update();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this.currentDateChangedFromParentSubscription) {\n            this.currentDateChangedFromParentSubscription.unsubscribe();\n            this.currentDateChangedFromParentSubscription = null;\n        }\n\n        if (this.eventSourceChangedSubscription) {\n            this.eventSourceChangedSubscription.unsubscribe();\n            this.eventSourceChangedSubscription = null;\n        }\n\n        if (this.slideChangedSubscription) {\n            this.slideChangedSubscription.unsubscribe();\n            this.slideChangedSubscription = null;\n        }\n\n        if (this.slideUpdatedSubscription) {\n            this.slideUpdatedSubscription.unsubscribe();\n            this.slideUpdatedSubscription = null;\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!this.inited) {\n            return;\n        }\n\n        const eventSourceChange = changes.eventSource;\n        if (eventSourceChange && eventSourceChange.currentValue) {\n            this.onDataLoaded();\n        }\n\n        const lockSwipeToPrev = changes.lockSwipeToPrev;\n        if (lockSwipeToPrev) {\n            this.slider.lockSwipeToPrev(lockSwipeToPrev.currentValue);\n        }\n\n        const lockSwipes = changes.lockSwipes;\n        if (lockSwipes) {\n            this.slider.lockSwipes(lockSwipes.currentValue);\n        }\n    }\n\n    ngAfterViewInit() {\n        const title = this.getTitle();\n        this.onTitleChanged.emit(title);\n    }\n\n    onSlideChanged() {\n        if (this.callbackOnInit) {\n            this.callbackOnInit = false;\n            return;\n        }\n\n        let direction = 0;\n        const currentViewIndex = this.currentViewIndex;\n\n        this.slider.getActiveIndex().then((currentSlideIndex) => {\n            currentSlideIndex = (currentSlideIndex + 2) % 3;\n            if(isNaN(currentSlideIndex)) {\n                currentSlideIndex = currentViewIndex;\n            }\n\n            if (currentSlideIndex - currentViewIndex === 1) {\n                direction = 1;\n            } else if (currentSlideIndex === 0 && currentViewIndex === 2) {\n                direction = 1;\n                this.slider.slideTo(1, 0, false);\n            } else if (currentViewIndex - currentSlideIndex === 1) {\n                direction = -1;\n            } else if (currentSlideIndex === 2 && currentViewIndex === 0) {\n                direction = -1;\n                this.slider.slideTo(3, 0, false);\n            }\n            this.currentViewIndex = currentSlideIndex;\n            this.move(direction);\n        });\n    }\n\n    move(direction: number) {\n        if (direction === 0) {\n            return;\n        }\n\n        this.direction = direction;\n        if (!this.moveOnSelected) {\n            const adjacentDate = this.calendarService.getAdjacentCalendarDate(this.mode, direction);\n            this.calendarService.setCurrentDate(adjacentDate);\n        }\n        this.refreshView();\n        this.direction = 0;\n        this.moveOnSelected = false;\n    }\n\n    createDateObject(date: Date): IMonthViewRow {\n        let disabled = false;\n        if (this.markDisabled) {\n            disabled = this.markDisabled(date);\n        }\n\n        return {\n            date,\n            events: [],\n            label: this.formatDayLabel(date),\n            secondary: false,\n            disabled\n        };\n    }\n\n    getViewData(startTime: Date): IMonthView {\n        const startDate = startTime,\n            date = startDate.getDate(),\n            month = (startDate.getMonth() + (date !== 1 ? 1 : 0)) % 12;\n\n        const dates = MonthViewComponent.getDates(startDate, 42);\n        const days: IMonthViewRow[] = [];\n        for (let i = 0; i < 42; i++) {\n            const dateObject = this.createDateObject(dates[i]);\n            dateObject.secondary = dates[i].getMonth() !== month;\n            days[i] = dateObject;\n        }\n\n        const dayHeaders: string[] = [];\n        for (let i = 0; i < 7; i++) {\n            dayHeaders.push(this.formatDayHeaderLabel(days[i].date));\n        }\n        return {\n            dates: days,\n            dayHeaders\n        };\n    }\n\n    getHighlightClass(date: IMonthViewRow): string {\n        let className = '';\n\n        if (date.hasEvent) {\n            if (date.secondary) {\n                className = 'monthview-secondary-with-event';\n            } else {\n                className = 'monthview-primary-with-event';\n            }\n        }\n\n        if (date.selected) {\n            if (className) {\n                className += ' ';\n            }\n            className += 'monthview-selected';\n        }\n\n        if (date.current) {\n            if (className) {\n                className += ' ';\n            }\n            className += 'monthview-current';\n        }\n\n        if (date.secondary) {\n            if (className) {\n                className += ' ';\n            }\n            className += 'text-muted';\n        }\n\n        if (date.disabled) {\n            if (className) {\n                className += ' ';\n            }\n            className += 'monthview-disabled';\n        }\n        return className;\n    }\n\n    getRange(currentDate: Date): IRange {\n        const year = currentDate.getFullYear(),\n            month = currentDate.getMonth(),\n            firstDayOfMonth = new Date(year, month, 1, 12, 0, 0), // set hour to 12 to avoid DST problem\n\n            difference = this.startingDayMonth - firstDayOfMonth.getDay(),\n            numDisplayedFromPreviousMonth = (difference > 0) ? 7 - difference : -difference,\n            startDate = new Date(firstDayOfMonth.getTime());\n\n        if (numDisplayedFromPreviousMonth > 0) {\n            startDate.setDate(-numDisplayedFromPreviousMonth + 1);\n        }\n\n        const endDate = new Date(startDate.getTime());\n        endDate.setDate(endDate.getDate() + 42);\n\n        return {\n            startTime: startDate,\n            endTime: endDate\n        };\n    }\n\n    onDataLoaded() {\n        const range = this.range,\n            eventSource = this.eventSource,\n            len = eventSource ? eventSource.length : 0,\n            startTime = range.startTime,\n            endTime = range.endTime,\n            utcStartTime = Date.UTC(startTime.getFullYear(), startTime.getMonth(), startTime.getDate()),\n            utcEndTime = Date.UTC(endTime.getFullYear(), endTime.getMonth(), endTime.getDate()),\n            currentViewIndex = this.currentViewIndex,\n            dates = this.views[currentViewIndex].dates,\n            oneDay = 86400000,\n            eps = 0.0006;\n\n        for (let r = 0; r < 42; r += 1) {\n            if (dates[r].hasEvent) {\n                dates[r].hasEvent = false;\n                dates[r].events = [];\n            }\n        }\n\n        for (let i = 0; i < len; i += 1) {\n            const event = eventSource[i],\n                eventStartTime = event.startTime,\n                eventEndTime = event.endTime;\n\n            let eventUTCStartTime: number,\n                eventUTCEndTime: number;\n            if (event.allDay) {\n                eventUTCStartTime = eventStartTime.getTime();\n                eventUTCEndTime = eventEndTime.getTime();\n            } else {\n                eventUTCStartTime = Date.UTC(eventStartTime.getFullYear(), eventStartTime.getMonth(), eventStartTime.getDate());\n                eventUTCEndTime = Date.UTC(eventEndTime.getFullYear(), eventEndTime.getMonth(), eventEndTime.getDate() + 1);\n            }\n\n            if (eventUTCEndTime <= utcStartTime || eventUTCStartTime >= utcEndTime) {\n                continue;\n            }\n\n            let timeDifferenceStart: number,\n                timeDifferenceEnd: number;\n\n            if (eventUTCStartTime < utcStartTime) {\n                timeDifferenceStart = 0;\n            } else {\n                timeDifferenceStart = (eventUTCStartTime - utcStartTime) / oneDay;\n            }\n\n            if (eventUTCEndTime > utcEndTime) {\n                timeDifferenceEnd = (utcEndTime - utcStartTime) / oneDay;\n            } else {\n                timeDifferenceEnd = (eventUTCEndTime - utcStartTime) / oneDay;\n            }\n\n            let index = Math.floor(timeDifferenceStart);\n            const endIndex = Math.ceil(timeDifferenceEnd - eps);\n            while (index < endIndex) {\n                dates[index].hasEvent = true;\n                let eventSet = dates[index].events;\n                if (eventSet) {\n                    eventSet.push(event);\n                } else {\n                    eventSet = [];\n                    eventSet.push(event);\n                    dates[index].events = eventSet;\n                }\n                index += 1;\n            }\n        }\n\n        for (let r = 0; r < 42; r += 1) {\n            if (dates[r].hasEvent) {\n                dates[r].events.sort(this.compareEvent);\n            }\n        }\n\n        if (this.autoSelect) {\n            let findSelected = false;\n            for (let r = 0; r < 42; r += 1) {\n                if (dates[r].selected) {\n                    this.selectedDate = dates[r];\n                    findSelected = true;\n                    break;\n                }\n            }\n\n            if (findSelected) {\n                this.onTimeSelected.emit({\n                    selectedTime: this.selectedDate.date,\n                    events: this.selectedDate.events,\n                    disabled: this.selectedDate.disabled\n                });\n            }\n        }\n    }\n\n    refreshView() {\n        this.range = this.getRange(this.calendarService.currentDate);\n\n        if (this.inited) {\n            const title = this.getTitle();\n            this.onTitleChanged.emit(title);\n        }\n        this.calendarService.populateAdjacentViews(this);\n        this.updateCurrentView(this.range.startTime, this.views[this.currentViewIndex]);\n        this.calendarService.rangeChanged(this);\n    }\n\n    getTitle(): string {\n        const currentViewStartDate = this.range.startTime,\n            date = currentViewStartDate.getDate(),\n            month = (currentViewStartDate.getMonth() + (date !== 1 ? 1 : 0)) % 12,\n            year = currentViewStartDate.getFullYear() + (date !== 1 && month === 0 ? 1 : 0),\n            headerDate = new Date(year, month, 1, 12, 0, 0, 0);\n        return this.formatTitle(headerDate);\n    }\n\n    private compareEvent(event1: IEvent, event2: IEvent): number {\n        if (event1.allDay) {\n            return 1;\n        } else if (event2.allDay) {\n            return -1;\n        } else {\n            return (event1.startTime.getTime() - event2.startTime.getTime());\n        }\n    }\n\n    select(viewDate: IMonthViewRow) {\n        if (!this.views) {\n            return;\n        }\n\n        const selectedDate = viewDate.date,\n            events = viewDate.events;\n\n        if (!viewDate.disabled) {\n            const dates = this.views[this.currentViewIndex].dates,\n                currentCalendarDate = this.calendarService.currentDate,\n                currentMonth = currentCalendarDate.getMonth(),\n                currentYear = currentCalendarDate.getFullYear(),\n                selectedMonth = selectedDate.getMonth(),\n                selectedYear = selectedDate.getFullYear();\n            let direction = 0;\n\n            if (currentYear === selectedYear) {\n                if (currentMonth !== selectedMonth) {\n                    direction = currentMonth < selectedMonth ? 1 : -1;\n                }\n            } else {\n                direction = currentYear < selectedYear ? 1 : -1;\n            }\n\n            this.calendarService.setCurrentDate(selectedDate);\n            if (direction === 0) {\n                const currentViewStartDate = this.range.startTime,\n                    oneDay = 86400000,\n                    selectedDayDifference = Math.round((Date.UTC(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate()) - Date.UTC(currentViewStartDate.getFullYear(), currentViewStartDate.getMonth(), currentViewStartDate.getDate())) / oneDay);\n\n                for (let r = 0; r < 42; r += 1) {\n                    dates[r].selected = false;\n                }\n\n                if (selectedDayDifference >= 0 && selectedDayDifference < 42) {\n                    dates[selectedDayDifference].selected = true;\n                    this.selectedDate = dates[selectedDayDifference];\n                }\n            } else {\n                this.moveOnSelected = true;\n                this.slideView(direction);\n            }\n        }\n\n        this.onTimeSelected.emit({selectedTime: selectedDate, events, disabled: viewDate.disabled});\n    }\n\n    slideView(direction: number) {\n        if (direction === 1) {\n            this.slider.slideNext();\n        } else if (direction === -1) {\n            this.slider.slidePrev();\n        }\n    }\n\n    updateCurrentView(currentViewStartDate: Date, view: IMonthView) {\n        const currentCalendarDate = this.calendarService.currentDate,\n            today = new Date(),\n            oneDay = 86400000,\n            selectedDayDifference = Math.round((Date.UTC(currentCalendarDate.getFullYear(), currentCalendarDate.getMonth(), currentCalendarDate.getDate()) - Date.UTC(currentViewStartDate.getFullYear(), currentViewStartDate.getMonth(), currentViewStartDate.getDate())) / oneDay),\n            currentDayDifference = Math.round((Date.UTC(today.getFullYear(), today.getMonth(), today.getDate()) - Date.UTC(currentViewStartDate.getFullYear(), currentViewStartDate.getMonth(), currentViewStartDate.getDate())) / oneDay);\n\n        for (let r = 0; r < 42; r += 1) {\n            view.dates[r].selected = false;\n        }\n\n        if (selectedDayDifference >= 0 && selectedDayDifference < 42 && !view.dates[selectedDayDifference].disabled && (this.autoSelect || this.moveOnSelected)) {\n            view.dates[selectedDayDifference].selected = true;\n            this.selectedDate = view.dates[selectedDayDifference];\n        } else {\n            this.selectedDate = {\n                date: null,\n                events: [],\n                label: null,\n                secondary: null,\n                disabled: false\n            };\n        }\n\n        if (currentDayDifference >= 0 && currentDayDifference < 42) {\n            view.dates[currentDayDifference].current = true;\n        }\n    }\n\n    eventSelected(event: IEvent) {\n        this.onEventSelected.emit(event);\n    }\n}\n","import {DatePipe} from '@angular/common';\nimport {IonSlides} from '@ionic/angular';\nimport {\n    Component,\n    OnInit,\n    OnChanges,\n    HostBinding,\n    Input,\n    Output,\n    EventEmitter,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation,\n    TemplateRef,\n    ElementRef,\n    OnDestroy, AfterViewInit\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\n\nimport {\n    ICalendarComponent,\n    IDisplayEvent,\n    IEvent,\n    ITimeSelected,\n    IRange,\n    IWeekView,\n    IWeekViewRow,\n    IWeekViewDateRow,\n    CalendarMode,\n    IDateFormatter,\n    IDisplayWeekViewHeader\n} from './calendar';\nimport {CalendarService} from './calendar.service';\nimport {\n    IDisplayAllDayEvent,\n    IWeekViewAllDayEventSectionTemplateContext,\n    IWeekViewNormalEventSectionTemplateContext\n} from './calendar';\n\n@Component({\n    selector: 'weekview',\n    template: `\n        <ion-slides #weekSlider [options]=\"sliderOptions\" [dir]=\"dir\" (ionSlideDidChange)=\"onSlideChanged()\"\n                    class=\"slides-container\">\n            <ion-slide class=\"slide-container\">\n                <table class=\"table table-bordered table-fixed weekview-header\">\n                    <thead>\n                    <tr>\n                        <th class=\"calendar-hour-column\"></th>\n                        <th class=\"weekview-header text-center\" *ngFor=\"let date of views[0].dates\"\n                            [ngClass]=\"getHighlightClass(date)\"\n                            (click)=\"daySelected(date)\">\n                            <ng-template [ngTemplateOutlet]=\"weekviewHeaderTemplate\"\n                                         [ngTemplateOutletContext]=\"{viewDate:date}\">\n                            </ng-template>\n                        </th>\n                    </tr>\n                    </thead>\n                </table>\n                <div *ngIf=\"0===currentViewIndex\">\n                    <div class=\"weekview-allday-table\">\n                        <div class=\"weekview-allday-label\">{{allDayLabel}}</div>\n                        <div class=\"weekview-allday-content-wrapper scroll-content\">\n                            <table class=\"table table-fixed weekview-allday-content-table\">\n                                <tbody>\n                                <tr>\n                                    <td *ngFor=\"let day of views[0].dates\" class=\"calendar-cell\">\n                                        <ng-template [ngTemplateOutlet]=\"weekviewAllDayEventSectionTemplate\"\n                                                     [ngTemplateOutletContext]=\"{day:day, eventTemplate:weekviewAllDayEventTemplate}\">\n                                        </ng-template>\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                    <init-position-scroll class=\"weekview-normal-event-container\" [initPosition]=\"initScrollPosition\"\n                                          [emitEvent]=\"preserveScrollPosition\" (onScroll)=\"setScrollPosition($event)\">\n                        <table class=\"table table-bordered table-fixed weekview-normal-event-table\">\n                            <tbody>\n                            <tr *ngFor=\"let row of views[0].rows; let i = index\">\n                                <td class=\"calendar-hour-column text-center\">\n                                    {{hourColumnLabels[i]}}\n                                </td>\n                                <td *ngFor=\"let tm of row\" class=\"calendar-cell\" tappable\n                                    (click)=\"select(tm.time, tm.events)\">\n                                    <ng-template [ngTemplateOutlet]=\"weekviewNormalEventSectionTemplate\"\n                                                 [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts, eventTemplate:weekviewNormalEventTemplate}\">\n                                    </ng-template>\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </init-position-scroll>\n                </div>\n                <div *ngIf=\"0!==currentViewIndex\">\n                    <div class=\"weekview-allday-table\">\n                        <div class=\"weekview-allday-label\">{{allDayLabel}}</div>\n                        <div class=\"weekview-allday-content-wrapper scroll-content\">\n                            <table class=\"table table-fixed weekview-allday-content-table\">\n                                <tbody>\n                                <tr>\n                                    <td *ngFor=\"let day of views[0].dates\" class=\"calendar-cell\">\n                                        <ng-template [ngTemplateOutlet]=\"weekviewInactiveAllDayEventSectionTemplate\"\n                                                     [ngTemplateOutletContext]=\"{day:day}\">\n                                        </ng-template>\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                    <init-position-scroll class=\"weekview-normal-event-container\" [initPosition]=\"initScrollPosition\">\n                        <table class=\"table table-bordered table-fixed weekview-normal-event-table\">\n                            <tbody>\n                            <tr *ngFor=\"let row of views[0].rows; let i = index\">\n                                <td class=\"calendar-hour-column text-center\">\n                                    {{hourColumnLabels[i]}}\n                                </td>\n                                <td *ngFor=\"let tm of row\" class=\"calendar-cell\">\n                                    <ng-template [ngTemplateOutlet]=\"weekviewInactiveNormalEventSectionTemplate\"\n                                                 [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts}\">\n                                    </ng-template>\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </init-position-scroll>\n                </div>\n            </ion-slide>\n            <ion-slide class=\"slide-container\">\n                <table class=\"table table-bordered table-fixed weekview-header\">\n                    <thead>\n                    <tr>\n                        <th class=\"calendar-hour-column\"></th>\n                        <th class=\"weekview-header text-center\" *ngFor=\"let date of views[1].dates\"\n                            [ngClass]=\"getHighlightClass(date)\"\n                            (click)=\"daySelected(date)\">\n                            <ng-template [ngTemplateOutlet]=\"weekviewHeaderTemplate\"\n                                         [ngTemplateOutletContext]=\"{viewDate:date}\">\n                            </ng-template>\n                        </th>\n                    </tr>\n                    </thead>\n                </table>\n                <div *ngIf=\"1===currentViewIndex\">\n                    <div class=\"weekview-allday-table\">\n                        <div class=\"weekview-allday-label\">{{allDayLabel}}</div>\n                        <div class=\"weekview-allday-content-wrapper scroll-content\">\n                            <table class=\"table table-fixed weekview-allday-content-table\">\n                                <tbody>\n                                <tr>\n                                    <td *ngFor=\"let day of views[1].dates\" class=\"calendar-cell\">\n                                        <ng-template [ngTemplateOutlet]=\"weekviewAllDayEventSectionTemplate\"\n                                                     [ngTemplateOutletContext]=\"{day:day, eventTemplate:weekviewAllDayEventTemplate}\">\n                                        </ng-template>\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                    <init-position-scroll class=\"weekview-normal-event-container\" [initPosition]=\"initScrollPosition\"\n                                          [emitEvent]=\"preserveScrollPosition\" (onScroll)=\"setScrollPosition($event)\">\n                        <table class=\"table table-bordered table-fixed weekview-normal-event-table\">\n                            <tbody>\n                            <tr *ngFor=\"let row of views[1].rows; let i = index\">\n                                <td class=\"calendar-hour-column text-center\">\n                                    {{hourColumnLabels[i]}}\n                                </td>\n                                <td *ngFor=\"let tm of row\" class=\"calendar-cell\" tappable\n                                    (click)=\"select(tm.time, tm.events)\">\n                                    <div [ngClass]=\"{'calendar-event-wrap': tm.events}\" *ngIf=\"tm.events\">\n                                        <ng-template [ngTemplateOutlet]=\"weekviewNormalEventSectionTemplate\"\n                                                     [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts, eventTemplate:weekviewNormalEventTemplate}\">\n                                        </ng-template>\n                                    </div>\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </init-position-scroll>\n                </div>\n                <div *ngIf=\"1!==currentViewIndex\">\n                    <div class=\"weekview-allday-table\">\n                        <div class=\"weekview-allday-label\">{{allDayLabel}}</div>\n                        <div class=\"weekview-allday-content-wrapper scroll-content\">\n                            <table class=\"table table-fixed weekview-allday-content-table\">\n                                <tbody>\n                                <tr>\n                                    <td *ngFor=\"let day of views[1].dates\" class=\"calendar-cell\">\n                                        <ng-template [ngTemplateOutlet]=\"weekviewInactiveAllDayEventSectionTemplate\"\n                                                     [ngTemplateOutletContext]=\"{day:day}\">\n                                        </ng-template>\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                    <init-position-scroll class=\"weekview-normal-event-container\" [initPosition]=\"initScrollPosition\">\n                        <table class=\"table table-bordered table-fixed weekview-normal-event-table\">\n                            <tbody>\n                            <tr *ngFor=\"let row of views[1].rows; let i = index\">\n                                <td class=\"calendar-hour-column text-center\">\n                                    {{hourColumnLabels[i]}}\n                                </td>\n                                <td *ngFor=\"let tm of row\" class=\"calendar-cell\">\n                                    <div [ngClass]=\"{'calendar-event-wrap': tm.events}\" *ngIf=\"tm.events\">\n                                        <ng-template [ngTemplateOutlet]=\"weekviewInactiveNormalEventSectionTemplate\"\n                                                     [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts}\">\n                                        </ng-template>\n                                    </div>\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </init-position-scroll>\n                </div>\n            </ion-slide>\n            <ion-slide class=\"slide-container\">\n                <table class=\"table table-bordered table-fixed weekview-header\">\n                    <thead>\n                    <tr>\n                        <th class=\"calendar-hour-column\"></th>\n                        <th class=\"weekview-header text-center\" *ngFor=\"let date of views[2].dates\"\n                            [ngClass]=\"getHighlightClass(date)\"\n                            (click)=\"daySelected(date)\">\n                            <ng-template [ngTemplateOutlet]=\"weekviewHeaderTemplate\"\n                                         [ngTemplateOutletContext]=\"{viewDate:date}\">\n                            </ng-template>\n                        </th>\n                    </tr>\n                    </thead>\n                </table>\n                <div *ngIf=\"2===currentViewIndex\">\n                    <div class=\"weekview-allday-table\">\n                        <div class=\"weekview-allday-label\">{{allDayLabel}}</div>\n                        <div class=\"weekview-allday-content-wrapper scroll-content\">\n                            <table class=\"table table-fixed weekview-allday-content-table\">\n                                <tbody>\n                                <tr>\n                                    <td *ngFor=\"let day of views[2].dates\" class=\"calendar-cell\">\n                                        <ng-template [ngTemplateOutlet]=\"weekviewAllDayEventSectionTemplate\"\n                                                     [ngTemplateOutletContext]=\"{day:day, eventTemplate:weekviewAllDayEventTemplate}\">\n                                        </ng-template>\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                    <init-position-scroll class=\"weekview-normal-event-container\" [initPosition]=\"initScrollPosition\"\n                                          [emitEvent]=\"preserveScrollPosition\" (onScroll)=\"setScrollPosition($event)\">\n                        <table class=\"table table-bordered table-fixed weekview-normal-event-table\">\n                            <tbody>\n                            <tr *ngFor=\"let row of views[2].rows; let i = index\">\n                                <td class=\"calendar-hour-column text-center\">\n                                    {{hourColumnLabels[i]}}\n                                </td>\n                                <td *ngFor=\"let tm of row\" class=\"calendar-cell\" tappable\n                                    (click)=\"select(tm.time, tm.events)\">\n                                    <div [ngClass]=\"{'calendar-event-wrap': tm.events}\" *ngIf=\"tm.events\">\n                                        <ng-template [ngTemplateOutlet]=\"weekviewNormalEventSectionTemplate\"\n                                                     [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts, eventTemplate:weekviewNormalEventTemplate}\">\n                                        </ng-template>\n                                    </div>\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </init-position-scroll>\n                </div>\n                <div *ngIf=\"2!==currentViewIndex\">\n                    <div class=\"weekview-allday-table\">\n                        <div class=\"weekview-allday-label\">{{allDayLabel}}</div>\n                        <div class=\"weekview-allday-content-wrapper scroll-content\">\n                            <table class=\"table table-fixed weekview-allday-content-table\">\n                                <tbody>\n                                <tr>\n                                    <td *ngFor=\"let day of views[2].dates\" class=\"calendar-cell\">\n                                        <ng-template [ngTemplateOutlet]=\"weekviewInactiveAllDayEventSectionTemplate\"\n                                                     [ngTemplateOutletContext]=\"{day:day}\">\n                                        </ng-template>\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                    <init-position-scroll class=\"weekview-normal-event-container\" [initPosition]=\"initScrollPosition\">\n                        <table class=\"table table-bordered table-fixed weekview-normal-event-table\">\n                            <tbody>\n                            <tr *ngFor=\"let row of views[2].rows; let i = index\">\n                                <td class=\"calendar-hour-column text-center\">\n                                    {{hourColumnLabels[i]}}\n                                </td>\n                                <td *ngFor=\"let tm of row\" class=\"calendar-cell\">\n                                    <div [ngClass]=\"{'calendar-event-wrap': tm.events}\" *ngIf=\"tm.events\">\n                                        <ng-template [ngTemplateOutlet]=\"weekviewInactiveNormalEventSectionTemplate\"\n                                                     [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts}\">\n                                        </ng-template>\n                                    </div>\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </init-position-scroll>\n                </div>\n            </ion-slide>\n        </ion-slides>\n    `,\n    styles: [`\n        .table-fixed {\n            table-layout: fixed;\n        }\n\n        .table {\n            width: 100%;\n            max-width: 100%;\n            background-color: transparent;\n        }\n\n        .table > thead > tr > th, .table > tbody > tr > th, .table > tfoot > tr > th, .table > thead > tr > td,\n        .table > tbody > tr > td, .table > tfoot > tr > td {\n            padding: 8px;\n            line-height: 20px;\n            vertical-align: top;\n        }\n\n        .table > thead > tr > th {\n            vertical-align: bottom;\n            border-bottom: 2px solid #ddd;\n        }\n\n        .table > thead:first-child > tr:first-child > th, .table > thead:first-child > tr:first-child > td {\n            border-top: 0\n        }\n\n        .table > tbody + tbody {\n            border-top: 2px solid #ddd;\n        }\n\n        .table-bordered {\n            border: 1px solid #ddd;\n        }\n\n        .table-bordered > thead > tr > th, .table-bordered > tbody > tr > th, .table-bordered > tfoot > tr > th,\n        .table-bordered > thead > tr > td, .table-bordered > tbody > tr > td, .table-bordered > tfoot > tr > td {\n            border: 1px solid #ddd;\n        }\n\n        .table-bordered > thead > tr > th, .table-bordered > thead > tr > td {\n            border-bottom-width: 2px;\n        }\n\n        .table-striped > tbody > tr:nth-child(odd) > td, .table-striped > tbody > tr:nth-child(odd) > th {\n            background-color: #f9f9f9\n        }\n\n        .calendar-hour-column {\n            width: 50px;\n            white-space: nowrap;\n        }\n\n        .calendar-event-wrap {\n            position: relative;\n            width: 100%;\n            height: 100%;\n        }\n\n        .calendar-event {\n            position: absolute;\n            padding: 2px;\n            cursor: pointer;\n            z-index: 10000;\n        }\n\n        .calendar-cell {\n            padding: 0 !important;\n            height: 37px;\n        }\n\n        .slides-container {\n            height: 100%;\n        }\n\n        .slide-container {\n            display: block;\n        }\n\n        .weekview-allday-label {\n            float: left;\n            height: 100%;\n            line-height: 50px;\n            text-align: center;\n            width: 50px;\n            border-left: 1px solid #ddd;\n        }\n\n        [dir=\"rtl\"] .weekview-allday-label {\n            float: right;\n            border-right: 1px solid #ddd;\n        }\n\n        .weekview-allday-content-wrapper {\n            margin-left: 50px;\n            overflow: hidden;\n            height: 51px;\n        }\n\n        [dir=\"rtl\"] .weekview-allday-content-wrapper {\n            margin-left: 0;\n            margin-right: 50px;\n        }\n\n        .weekview-allday-content-table {\n            min-height: 50px;\n        }\n\n        .weekview-allday-content-table td {\n            border-left: 1px solid #ddd;\n            border-right: 1px solid #ddd;\n        }\n\n        .weekview-header th {\n            overflow: hidden;\n            white-space: nowrap;\n            font-size: 14px;\n        }\n\n        .weekview-allday-table {\n            height: 50px;\n            position: relative;\n            border-bottom: 1px solid #ddd;\n            font-size: 14px;\n        }\n\n        .weekview-normal-event-container {\n            margin-top: 87px;\n            overflow: hidden;\n            left: 0;\n            right: 0;\n            top: 0;\n            bottom: 0;\n            position: absolute;\n            font-size: 14px;\n        }\n\n        .scroll-content {\n            overflow-y: auto;\n            overflow-x: hidden;\n        }\n\n        ::-webkit-scrollbar,\n        *::-webkit-scrollbar {\n            display: none;\n        }\n\n        .table > tbody > tr > td.calendar-hour-column {\n            padding-left: 0;\n            padding-right: 0;\n            vertical-align: middle;\n        }\n\n        @media (max-width: 750px) {\n            .weekview-allday-label, .calendar-hour-column {\n                width: 31px;\n                font-size: 12px;\n            }\n\n            .weekview-allday-label {\n                padding-top: 4px;\n            }\n\n            .table > tbody > tr > td.calendar-hour-column {\n                padding-left: 0;\n                padding-right: 0;\n                vertical-align: middle;\n                line-height: 12px;\n            }\n\n            .table > thead > tr > th.weekview-header {\n                padding-left: 0;\n                padding-right: 0;\n                font-size: 12px;\n            }\n\n            .weekview-allday-label {\n                line-height: 20px;\n            }\n\n            .weekview-allday-content-wrapper {\n                margin-left: 31px;\n            }\n\n            [dir=\"rtl\"] .weekview-allday-content-wrapper {\n                margin-left: 0;\n                margin-right: 31px;\n            }\n        }\n    `],\n    encapsulation: ViewEncapsulation.None\n})\nexport class WeekViewComponent implements ICalendarComponent, OnInit, OnChanges, OnDestroy, AfterViewInit {\n\n    constructor(private calendarService: CalendarService, private elm: ElementRef) {\n    }\n\n    @ViewChild('weekSlider', {static: true}) slider: IonSlides;\n    @HostBinding('class.weekview') class = true;\n\n    @Input() weekviewHeaderTemplate: TemplateRef<IDisplayWeekViewHeader>;\n    @Input() weekviewAllDayEventTemplate: TemplateRef<IDisplayAllDayEvent>;\n    @Input() weekviewNormalEventTemplate: TemplateRef<IDisplayEvent>;\n    @Input() weekviewAllDayEventSectionTemplate: TemplateRef<IWeekViewAllDayEventSectionTemplateContext>;\n    @Input() weekviewNormalEventSectionTemplate: TemplateRef<IWeekViewNormalEventSectionTemplateContext>;\n    @Input() weekviewInactiveAllDayEventSectionTemplate: TemplateRef<IWeekViewAllDayEventSectionTemplateContext>;\n    @Input() weekviewInactiveNormalEventSectionTemplate: TemplateRef<IWeekViewNormalEventSectionTemplateContext>;\n\n    @Input() formatWeekTitle: string;\n    @Input() formatWeekViewDayHeader: string;\n    @Input() formatHourColumn: string;\n    @Input() startingDayWeek: number;\n    @Input() allDayLabel: string;\n    @Input() hourParts: number;\n    @Input() eventSource: IEvent[];\n    @Input() autoSelect = true;\n    @Input() markDisabled: (date: Date) => boolean;\n    @Input() locale: string;\n    @Input() dateFormatter: IDateFormatter;\n    @Input() dir = '';\n    @Input() scrollToHour = 0;\n    @Input() preserveScrollPosition: boolean;\n    @Input() lockSwipeToPrev: boolean;\n    @Input() lockSwipes: boolean;\n    @Input() startHour: number;\n    @Input() endHour: number;\n    @Input() sliderOptions: any;\n    @Input() hourSegments: number;\n\n    @Output() onRangeChanged = new EventEmitter<IRange>();\n    @Output() onEventSelected = new EventEmitter<IEvent>();\n    @Output() onTimeSelected = new EventEmitter<ITimeSelected>();\n    @Output() onTitleChanged = new EventEmitter<string>(true);\n\n    public views: IWeekView[] = [];\n    public currentViewIndex = 0;\n    public range: IRange;\n    public direction = 0;\n    public mode: CalendarMode = 'week';\n\n    private inited = false;\n    private callbackOnInit = true;\n    private currentDateChangedFromParentSubscription: Subscription;\n    private eventSourceChangedSubscription: Subscription;\n    private slideChangedSubscription: Subscription;\n    private slideUpdatedSubscription: Subscription;\n\n    public hourColumnLabels: string[];\n    public initScrollPosition: number;\n    private formatDayHeader: (date: Date) => string;\n    private formatTitle: (date: Date) => string;\n    private formatHourColumnLabel: (date: Date) => string;\n    private hourRange: number;\n\n    static createDateObjects(startTime: Date, startHour: number, endHour: number, timeInterval: number): IWeekViewRow[][] {\n        const times: IWeekViewRow[][] = [],\n            currentHour = 0,\n            currentDate = startTime.getDate();\n        let hourStep,\n            minStep;\n\n        if (timeInterval < 1) {\n            hourStep = Math.floor(1 / timeInterval);\n            minStep = 60;\n        } else {\n            hourStep = 1;\n            minStep = Math.floor(60 / timeInterval);\n        }\n\n        for (let hour = startHour; hour < endHour; hour += hourStep) {\n            for (let interval = 0; interval < 60; interval += minStep) {\n                const row: IWeekViewRow[] = [];\n                for (let day = 0; day < 7; day += 1) {\n                    const time = new Date(startTime.getTime());\n                    time.setHours(currentHour + hour, interval);\n                    time.setDate(currentDate + day);\n                    row.push({\n                        events: [],\n                        time\n                    });\n                }\n                times.push(row);\n            }\n        }\n        return times;\n    }\n\n    static getDates(startTime: Date, n: number): IWeekViewDateRow[] {\n        const dates = new Array(n),\n            current = new Date(startTime.getTime());\n        let i = 0;\n        while (i < n) {\n            dates[i++] = {\n                date: new Date(current.getTime()),\n                events: [],\n                dayHeader: ''\n            };\n            current.setDate(current.getDate() + 1);\n        }\n        return dates;\n    }\n\n    private static compareEventByStartOffset(eventA: IDisplayEvent, eventB: IDisplayEvent): number {\n        return eventA.startOffset - eventB.startOffset;\n    }\n\n    private static calculateWidth(orderedEvents: IDisplayEvent[], size: number, hourParts: number) {\n        const totalSize = size * hourParts,\n            cells = new Array(totalSize);\n\n        // sort by position in descending order, the right most columns should be calculated first\n        orderedEvents.sort((eventA, eventB) => {\n            return eventB.position - eventA.position;\n        });\n        for (let i = 0; i < totalSize; i += 1) {\n            cells[i] = {\n                calculated: false,\n                events: []\n            };\n        }\n        const len = orderedEvents.length;\n        for (let i = 0; i < len; i += 1) {\n            const event = orderedEvents[i];\n            let index = event.startIndex * hourParts + event.startOffset;\n            while (index < event.endIndex * hourParts - event.endOffset) {\n                cells[index].events.push(event);\n                index += 1;\n            }\n        }\n\n        let i = 0;\n        while (i < len) {\n            let event = orderedEvents[i];\n            if (!event.overlapNumber) {\n                const overlapNumber = event.position + 1;\n                event.overlapNumber = overlapNumber;\n                const eventQueue = [event];\n                while (event = eventQueue.shift()) {\n                    let index = event.startIndex * hourParts + event.startOffset;\n                    while (index < event.endIndex * hourParts - event.endOffset) {\n                        if (!cells[index].calculated) {\n                            cells[index].calculated = true;\n                            if (cells[index].events) {\n                                const eventCountInCell = cells[index].events.length;\n                                for (let j = 0; j < eventCountInCell; j += 1) {\n                                    const currentEventInCell = cells[index].events[j];\n                                    if (!currentEventInCell.overlapNumber) {\n                                        currentEventInCell.overlapNumber = overlapNumber;\n                                        eventQueue.push(currentEventInCell);\n                                    }\n                                }\n                            }\n                        }\n                        index += 1;\n                    }\n                }\n            }\n            i += 1;\n        }\n    }\n\n    ngOnInit() {\n        if (!this.sliderOptions) {\n            this.sliderOptions = {};\n        }\n        this.sliderOptions.loop = true;\n\n        this.hourRange = (this.endHour - this.startHour) * this.hourSegments;\n        if (this.dateFormatter && this.dateFormatter.formatWeekViewDayHeader) {\n            this.formatDayHeader = this.dateFormatter.formatWeekViewDayHeader;\n        } else {\n            const datePipe = new DatePipe(this.locale);\n            this.formatDayHeader = function (date: Date) {\n                return datePipe.transform(date, this.formatWeekViewDayHeader);\n            };\n        }\n\n        if (this.dateFormatter && this.dateFormatter.formatWeekViewTitle) {\n            this.formatTitle = this.dateFormatter.formatWeekViewTitle;\n        } else {\n            const datePipe = new DatePipe(this.locale);\n            this.formatTitle = function (date: Date) {\n                return datePipe.transform(date, this.formatWeekTitle);\n            };\n        }\n\n        if (this.dateFormatter && this.dateFormatter.formatWeekViewHourColumn) {\n            this.formatHourColumnLabel = this.dateFormatter.formatWeekViewHourColumn;\n        } else {\n            const datePipe = new DatePipe(this.locale);\n            this.formatHourColumnLabel = function (date: Date) {\n                return datePipe.transform(date, this.formatHourColumn);\n            };\n        }\n\n        if (this.lockSwipeToPrev) {\n            this.slider.lockSwipeToPrev(true);\n        }\n\n        if (this.lockSwipes) {\n            this.slider.lockSwipes(true);\n        }\n\n        this.refreshView();\n        this.hourColumnLabels = this.getHourColumnLabels();\n        this.inited = true;\n\n        this.currentDateChangedFromParentSubscription = this.calendarService.currentDateChangedFromParent$.subscribe(currentDate => {\n            this.refreshView();\n        });\n\n        this.eventSourceChangedSubscription = this.calendarService.eventSourceChanged$.subscribe(() => {\n            this.onDataLoaded();\n        });\n\n        this.slideChangedSubscription = this.calendarService.slideChanged$.subscribe(direction => {\n            if (direction === 1) {\n                this.slider.slideNext();\n            } else if (direction === -1) {\n                this.slider.slidePrev();\n            }\n        });\n\n        this.slideUpdatedSubscription = this.calendarService.slideUpdated$.subscribe(() => {\n            this.slider.update();\n        });\n    }\n\n    ngAfterViewInit() {\n        const title = this.getTitle();\n        this.onTitleChanged.emit(title);\n\n        if (this.scrollToHour > 0) {\n            const hourColumns = this.elm.nativeElement.querySelector('.weekview-normal-event-container').querySelectorAll('.calendar-hour-column');\n            const me = this;\n            setTimeout(() => {\n                me.initScrollPosition = hourColumns[me.scrollToHour - me.startHour].offsetTop;\n            }, 50);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!this.inited) {\n            return;\n        }\n\n        const eventSourceChange = changes.eventSource;\n        if (eventSourceChange && eventSourceChange.currentValue) {\n            this.onDataLoaded();\n        }\n\n        const lockSwipeToPrev = changes.lockSwipeToPrev;\n        if (lockSwipeToPrev) {\n            this.slider.lockSwipeToPrev(lockSwipeToPrev.currentValue);\n        }\n\n        const lockSwipes = changes.lockSwipes;\n        if (lockSwipes) {\n            this.slider.lockSwipes(lockSwipes.currentValue);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.currentDateChangedFromParentSubscription) {\n            this.currentDateChangedFromParentSubscription.unsubscribe();\n            this.currentDateChangedFromParentSubscription = null;\n        }\n\n        if (this.eventSourceChangedSubscription) {\n            this.eventSourceChangedSubscription.unsubscribe();\n            this.eventSourceChangedSubscription = null;\n        }\n\n        if (this.slideChangedSubscription) {\n            this.slideChangedSubscription.unsubscribe();\n            this.slideChangedSubscription = null;\n        }\n\n        if (this.slideUpdatedSubscription) {\n            this.slideUpdatedSubscription.unsubscribe();\n            this.slideUpdatedSubscription = null;\n        }\n    }\n\n    onSlideChanged() {\n        if (this.callbackOnInit) {\n            this.callbackOnInit = false;\n            return;\n        }\n\n        const currentViewIndex = this.currentViewIndex;\n        let direction = 0;\n\n        this.slider.getActiveIndex().then(currentSlideIndex => {\n            currentSlideIndex = (currentSlideIndex + 2) % 3;\n            if(isNaN(currentSlideIndex)) {\n                currentSlideIndex = currentViewIndex;\n            }\n\n            if (currentSlideIndex - currentViewIndex === 1) {\n                direction = 1;\n            } else if (currentSlideIndex === 0 && currentViewIndex === 2) {\n                direction = 1;\n                this.slider.slideTo(1, 0, false);\n            } else if (currentViewIndex - currentSlideIndex === 1) {\n                direction = -1;\n            } else if (currentSlideIndex === 2 && currentViewIndex === 0) {\n                direction = -1;\n                this.slider.slideTo(3, 0, false);\n            }\n            this.currentViewIndex = currentSlideIndex;\n            this.move(direction);\n        });\n    }\n\n    move(direction: number) {\n        if (direction === 0) {\n            return;\n        }\n        this.direction = direction;\n        const adjacent = this.calendarService.getAdjacentCalendarDate(this.mode, direction);\n        this.calendarService.setCurrentDate(adjacent);\n        this.refreshView();\n        this.direction = 0;\n    }\n\n    private getHourColumnLabels(): string[] {\n        const hourColumnLabels: string[] = [];\n        for (let hour = 0, length = this.views[0].rows.length; hour < length; hour += 1) {\n            // handle edge case for DST\n            if (hour === 0 && this.views[0].rows[hour][0].time.getHours() !== this.startHour) {\n                const time = new Date(this.views[0].rows[hour][0].time);\n                time.setDate(time.getDate() + 1);\n                time.setHours(this.startHour);\n                hourColumnLabels.push(this.formatHourColumnLabel(time));\n            } else {\n                hourColumnLabels.push(this.formatHourColumnLabel(this.views[0].rows[hour][0].time));\n            }\n        }\n        return hourColumnLabels;\n    }\n\n    getViewData(startTime: Date): IWeekView {\n        const dates = WeekViewComponent.getDates(startTime, 7);\n        for (let i = 0; i < 7; i++) {\n            dates[i].dayHeader = this.formatDayHeader(dates[i].date);\n        }\n\n        return {\n            rows: WeekViewComponent.createDateObjects(startTime, this.startHour, this.endHour, this.hourSegments),\n            dates\n        };\n    }\n\n    getRange(currentDate: Date): IRange {\n        const year = currentDate.getFullYear(),\n            month = currentDate.getMonth(),\n            date = currentDate.getDate(),\n            day = currentDate.getDay();\n        let difference = day - this.startingDayWeek;\n\n        if (difference < 0) {\n            difference += 7;\n        }\n\n        // set hour to 12 to avoid DST problem\n        const firstDayOfWeek = new Date(year, month, date - difference, 12, 0, 0),\n            endTime = new Date(year, month, date - difference + 7, 12, 0, 0);\n\n        return {\n            startTime: firstDayOfWeek,\n            endTime\n        };\n    }\n\n    onDataLoaded() {\n        const eventSource = this.eventSource,\n            len = eventSource ? eventSource.length : 0,\n            startTime = this.range.startTime,\n            endTime = this.range.endTime,\n            utcStartTime = Date.UTC(startTime.getFullYear(), startTime.getMonth(), startTime.getDate()),\n            utcEndTime = Date.UTC(endTime.getFullYear(), endTime.getMonth(), endTime.getDate()),\n            currentViewIndex = this.currentViewIndex,\n            rows = this.views[currentViewIndex].rows,\n            dates = this.views[currentViewIndex].dates,\n            oneHour = 3600000,\n            oneDay = 86400000,\n            // add allday eps\n            eps = 0.016,\n            rangeStartRowIndex = this.startHour * this.hourSegments,\n            rangeEndRowIndex = this.endHour * this.hourSegments,\n            allRows = 24 * this.hourSegments;\n        let allDayEventInRange = false,\n            normalEventInRange = false;\n\n        for (let i = 0; i < 7; i += 1) {\n            dates[i].events = [];\n            dates[i].hasEvent = false;\n        }\n\n        for (let day = 0; day < 7; day += 1) {\n            for (let hour = 0; hour < this.hourRange; hour += 1) {\n                rows[hour][day].events = [];\n            }\n        }\n        for (let i = 0; i < len; i += 1) {\n            const event = eventSource[i];\n            const eventStartTime = event.startTime;\n            const eventEndTime = event.endTime;\n\n            let eventUTCStartTime: number,\n                eventUTCEndTime: number;\n\n            if (event.allDay) {\n                eventUTCStartTime = eventStartTime.getTime();\n                eventUTCEndTime = eventEndTime.getTime();\n            } else {\n                eventUTCStartTime = Date.UTC(eventStartTime.getFullYear(), eventStartTime.getMonth(), eventStartTime.getDate());\n                eventUTCEndTime = Date.UTC(eventEndTime.getFullYear(), eventEndTime.getMonth(), eventEndTime.getDate() + 1);\n            }\n\n            if (eventUTCEndTime <= utcStartTime || eventUTCStartTime >= utcEndTime || eventStartTime >= eventEndTime) {\n                continue;\n            }\n\n            if (event.allDay) {\n                allDayEventInRange = true;\n\n                let allDayStartIndex: number;\n                if (eventUTCStartTime <= utcStartTime) {\n                    allDayStartIndex = 0;\n                } else {\n                    allDayStartIndex = Math.round((eventUTCStartTime - utcStartTime) / oneDay);\n                }\n\n                let allDayEndIndex: number;\n                if (eventUTCEndTime >= utcEndTime) {\n                    allDayEndIndex = Math.round((utcEndTime - utcStartTime) / oneDay);\n                } else {\n                    allDayEndIndex = Math.round((eventUTCEndTime - utcStartTime) / oneDay);\n                }\n\n                const displayAllDayEvent: IDisplayEvent = {\n                    event,\n                    startIndex: allDayStartIndex,\n                    endIndex: allDayEndIndex\n                };\n\n                let eventSet = dates[allDayStartIndex].events;\n                if (eventSet) {\n                    eventSet.push(displayAllDayEvent);\n                } else {\n                    eventSet = [];\n                    eventSet.push(displayAllDayEvent);\n                    dates[allDayStartIndex].events = eventSet;\n                }\n                dates[allDayStartIndex].hasEvent = true;\n            } else {\n                normalEventInRange = true;\n\n                let timeDifferenceStart: number;\n                if (eventUTCStartTime < utcStartTime) {\n                    timeDifferenceStart = 0;\n                } else {\n                    timeDifferenceStart = (eventUTCStartTime - utcStartTime) / oneHour * this.hourSegments + (eventStartTime.getHours() + eventStartTime.getMinutes() / 60) * this.hourSegments;\n                }\n\n                let timeDifferenceEnd: number;\n                if (eventUTCEndTime > utcEndTime) {\n                    timeDifferenceEnd = (utcEndTime - utcStartTime) / oneHour * this.hourSegments;\n                } else {\n                    timeDifferenceEnd = (eventUTCEndTime - oneDay - utcStartTime) / oneHour * this.hourSegments + (eventEndTime.getHours() + eventEndTime.getMinutes() / 60) * this.hourSegments;\n                }\n\n                const startIndex = Math.floor(timeDifferenceStart),\n                    endIndex = Math.ceil(timeDifferenceEnd - eps);\n                let startRowIndex = startIndex % allRows,\n                    dayIndex = Math.floor(startIndex / allRows),\n                    endOfDay = dayIndex * allRows,\n                    startOffset = 0,\n                    endOffset = 0;\n\n                if (this.hourParts !== 1) {\n                    if (startRowIndex < rangeStartRowIndex) {\n                        startOffset = 0;\n                    } else {\n                        startOffset = Math.floor((timeDifferenceStart - startIndex) * this.hourParts);\n                    }\n                }\n\n                do {\n                    endOfDay += allRows;\n                    let endRowIndex: number;\n                    if (endOfDay < endIndex) {\n                        endRowIndex = allRows;\n                    } else {\n                        if (endOfDay === endIndex) {\n                            endRowIndex = allRows;\n                        } else {\n                            endRowIndex = endIndex % allRows;\n                        }\n                        if (this.hourParts !== 1) {\n                            if (endRowIndex > rangeEndRowIndex) {\n                                endOffset = 0;\n                            } else {\n                                endOffset = Math.floor((endIndex - timeDifferenceEnd) * this.hourParts);\n                            }\n                        }\n                    }\n                    if (startRowIndex < rangeStartRowIndex) {\n                        startRowIndex = 0;\n                    } else {\n                        startRowIndex -= rangeStartRowIndex;\n                    }\n                    if (endRowIndex > rangeEndRowIndex) {\n                        endRowIndex = rangeEndRowIndex;\n                    }\n                    endRowIndex -= rangeStartRowIndex;\n\n                    if (startRowIndex < endRowIndex) {\n                        const displayEvent = {\n                            event,\n                            startIndex: startRowIndex,\n                            endIndex: endRowIndex,\n                            startOffset,\n                            endOffset\n                        };\n                        let eventSet = rows[startRowIndex][dayIndex].events;\n                        if (eventSet) {\n                            eventSet.push(displayEvent);\n                        } else {\n                            eventSet = [];\n                            eventSet.push(displayEvent);\n                            rows[startRowIndex][dayIndex].events = eventSet;\n                        }\n                        dates[dayIndex].hasEvent = true;\n                    }\n                    startRowIndex = 0;\n                    startOffset = 0;\n                    dayIndex += 1;\n                } while (endOfDay < endIndex);\n            }\n        }\n\n        if (normalEventInRange) {\n            for (let day = 0; day < 7; day += 1) {\n                let orderedEvents: IDisplayEvent[] = [];\n                for (let hour = 0; hour < this.hourRange; hour += 1) {\n                    if (rows[hour][day].events) {\n                        rows[hour][day].events.sort(WeekViewComponent.compareEventByStartOffset);\n                        orderedEvents = orderedEvents.concat(rows[hour][day].events);\n                    }\n                }\n                if (orderedEvents.length > 0) {\n                    this.placeEvents(orderedEvents);\n                }\n            }\n        }\n\n        if (allDayEventInRange) {\n            let orderedAllDayEvents: IDisplayEvent[] = [];\n            for (let day = 0; day < 7; day += 1) {\n                if (dates[day].events) {\n                    orderedAllDayEvents = orderedAllDayEvents.concat(dates[day].events);\n                }\n            }\n            if (orderedAllDayEvents.length > 0) {\n                this.placeAllDayEvents(orderedAllDayEvents);\n            }\n        }\n\n        if (this.autoSelect) {\n            let findSelected = false;\n            let selectedDate;\n            for (let r = 0; r < 7; r += 1) {\n                if (dates[r].selected) {\n                    selectedDate = dates[r];\n                    findSelected = true;\n                    break;\n                }\n            }\n\n            if (findSelected) {\n                let disabled = false;\n                if (this.markDisabled) {\n                    disabled = this.markDisabled(selectedDate.date);\n                }\n\n                this.onTimeSelected.emit({\n                    selectedTime: selectedDate.date,\n                    events: selectedDate.events.map(e => e.event),\n                    disabled\n                });\n            }\n        }\n    }\n\n    refreshView() {\n        this.range = this.getRange(this.calendarService.currentDate);\n\n        if (this.inited) {\n            const title = this.getTitle();\n            this.onTitleChanged.emit(title);\n        }\n        this.calendarService.populateAdjacentViews(this);\n        this.updateCurrentView(this.range.startTime, this.views[this.currentViewIndex]);\n        this.calendarService.rangeChanged(this);\n    }\n\n    getTitle(): string {\n        const firstDayOfWeek = new Date(this.range.startTime.getTime());\n        firstDayOfWeek.setHours(12, 0, 0, 0);\n        return this.formatTitle(firstDayOfWeek);\n    }\n\n    getHighlightClass(date: IWeekViewDateRow): string {\n        let className = '';\n\n        if (date.hasEvent) {\n            if (className) {\n                className += ' ';\n            }\n            className = 'weekview-with-event';\n        }\n\n        if (date.selected) {\n            if (className) {\n                className += ' ';\n            }\n            className += 'weekview-selected';\n        }\n\n        if (date.current) {\n            if (className) {\n                className += ' ';\n            }\n            className += 'weekview-current';\n        }\n\n        return className;\n    }\n\n    select(selectedTime: Date, events: IDisplayEvent[]) {\n        let disabled = false;\n        if (this.markDisabled) {\n            disabled = this.markDisabled(selectedTime);\n        }\n\n        this.onTimeSelected.emit({\n            selectedTime,\n            events: events.map(e => e.event),\n            disabled\n        });\n    }\n\n    placeEvents(orderedEvents: IDisplayEvent[]) {\n        this.calculatePosition(orderedEvents);\n        WeekViewComponent.calculateWidth(orderedEvents, this.hourRange, this.hourParts);\n    }\n\n    placeAllDayEvents(orderedEvents: IDisplayEvent[]) {\n        this.calculatePosition(orderedEvents);\n    }\n\n    overlap(event1: IDisplayEvent, event2: IDisplayEvent): boolean {\n        let earlyEvent = event1,\n            lateEvent = event2;\n        if (event1.startIndex > event2.startIndex || (event1.startIndex === event2.startIndex && event1.startOffset > event2.startOffset)) {\n            earlyEvent = event2;\n            lateEvent = event1;\n        }\n\n        if (earlyEvent.endIndex <= lateEvent.startIndex) {\n            return false;\n        } else {\n            return !(earlyEvent.endIndex - lateEvent.startIndex === 1 && earlyEvent.endOffset + lateEvent.startOffset >= this.hourParts);\n        }\n    }\n\n    calculatePosition(events: IDisplayEvent[]) {\n        const len = events.length,\n            isForbidden = new Array(len);\n        let maxColumn = 0;\n\n        for (let i = 0; i < len; i += 1) {\n            let col: number;\n            for (col = 0; col < maxColumn; col += 1) {\n                isForbidden[col] = false;\n            }\n            for (let j = 0; j < i; j += 1) {\n                if (this.overlap(events[i], events[j])) {\n                    isForbidden[events[j].position] = true;\n                }\n            }\n            for (col = 0; col < maxColumn; col += 1) {\n                if (!isForbidden[col]) {\n                    break;\n                }\n            }\n            if (col < maxColumn) {\n                events[i].position = col;\n            } else {\n                events[i].position = maxColumn++;\n            }\n        }\n\n        if (this.dir === 'rtl') {\n            for (let i = 0; i < len; i += 1) {\n                events[i].position = maxColumn - 1 - events[i].position;\n            }\n        }\n    }\n\n    updateCurrentView(currentViewStartDate: Date, view: IWeekView) {\n        const currentCalendarDate = this.calendarService.currentDate,\n            today = new Date(),\n            oneDay = 86400000,\n            selectedDayDifference = Math.round((Date.UTC(currentCalendarDate.getFullYear(), currentCalendarDate.getMonth(), currentCalendarDate.getDate()) - Date.UTC(currentViewStartDate.getFullYear(), currentViewStartDate.getMonth(), currentViewStartDate.getDate())) / oneDay),\n            currentDayDifference = Math.floor((Date.UTC(today.getFullYear(), today.getMonth(), today.getTime()) - Date.UTC(currentViewStartDate.getFullYear(), currentViewStartDate.getMonth(), currentViewStartDate.getDate())) / oneDay);\n\n        for (let r = 0; r < 7; r += 1) {\n            view.dates[r].selected = false;\n        }\n\n        if (selectedDayDifference >= 0 && selectedDayDifference < 7 && this.autoSelect) {\n            view.dates[selectedDayDifference].selected = true;\n        }\n\n        if (currentDayDifference >= 0 && currentDayDifference < 7) {\n            view.dates[currentDayDifference].current = true;\n        }\n    }\n\n    daySelected(viewDate: IWeekViewDateRow) {\n        const selectedDate = viewDate.date,\n            dates = this.views[this.currentViewIndex].dates,\n            currentViewStartDate = this.range.startTime,\n            oneDay = 86400000,\n            selectedDayDifference = Math.round((Date.UTC(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate()) - Date.UTC(currentViewStartDate.getFullYear(), currentViewStartDate.getMonth(), currentViewStartDate.getDate())) / oneDay);\n\n        this.calendarService.setCurrentDate(selectedDate);\n\n        for (let r = 0; r < 7; r += 1) {\n            dates[r].selected = false;\n        }\n\n        if (selectedDayDifference >= 0 && selectedDayDifference < 7) {\n            dates[selectedDayDifference].selected = true;\n        }\n\n        let disabled = false;\n        if (this.markDisabled) {\n            disabled = this.markDisabled(selectedDate);\n        }\n\n        this.onTimeSelected.emit({selectedTime: selectedDate, events: viewDate.events.map(e => e.event), disabled});\n    }\n\n    setScrollPosition(scrollPosition: number) {\n        this.initScrollPosition = scrollPosition;\n    }\n}\n","import {DatePipe} from '@angular/common';\nimport {IonSlides} from '@ionic/angular';\nimport {\n    Component,\n    OnInit,\n    OnChanges,\n    HostBinding,\n    Input,\n    Output,\n    EventEmitter,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation,\n    TemplateRef,\n    ElementRef,\n    AfterViewInit, OnDestroy\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\n\nimport {\n    ICalendarComponent,\n    IDayView,\n    IDayViewRow,\n    IDisplayEvent,\n    IEvent,\n    ITimeSelected,\n    IRange,\n    CalendarMode,\n    IDateFormatter\n} from './calendar';\nimport {CalendarService} from './calendar.service';\nimport {IDisplayAllDayEvent, IDayViewAllDayEventSectionTemplateContext, IDayViewNormalEventSectionTemplateContext} from './calendar';\n\n@Component({\n    selector: 'dayview',\n    template: `\n        <ion-slides #daySlider [options]=\"sliderOptions\" [dir]=\"dir\" (ionSlideDidChange)=\"onSlideChanged()\" class=\"slides-container\">\n            <ion-slide class=\"slide-container\">\n                <div class=\"dayview-allday-table\">\n                    <div class=\"dayview-allday-label\">{{allDayLabel}}</div>\n                    <div class=\"dayview-allday-content-wrapper scroll-content\">\n                        <table class=\"table table-bordered dayview-allday-content-table\">\n                            <tbody>\n                            <tr>\n                                <td class=\"calendar-cell\" [ngClass]=\"{'calendar-event-wrap':views[0].allDayEvents.length>0}\"\n                                    [ngStyle]=\"{height: 25*views[0].allDayEvents.length+'px'}\"\n                                    *ngIf=\"0===currentViewIndex\">\n                                    <ng-template [ngTemplateOutlet]=\"dayviewAllDayEventSectionTemplate\"\n                                                 [ngTemplateOutletContext]=\"{allDayEvents:views[0].allDayEvents,eventTemplate:dayviewAllDayEventTemplate}\">\n                                    </ng-template>\n                                </td>\n                                <td class=\"calendar-cell\" *ngIf=\"0!==currentViewIndex\">\n                                    <ng-template [ngTemplateOutlet]=\"dayviewInactiveAllDayEventSectionTemplate\"\n                                                 [ngTemplateOutletContext]=\"{allDayEvents:views[0].allDayEvents}\">\n                                    </ng-template>\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <init-position-scroll *ngIf=\"0===currentViewIndex\" class=\"dayview-normal-event-container\"\n                                      [initPosition]=\"initScrollPosition\" [emitEvent]=\"preserveScrollPosition\"\n                                      (onScroll)=\"setScrollPosition($event)\">\n                    <table class=\"table table-bordered table-fixed dayview-normal-event-table\">\n                        <tbody>\n                        <tr *ngFor=\"let tm of views[0].rows; let i = index\">\n                            <td class=\"calendar-hour-column text-center\">\n                                {{hourColumnLabels[i]}}\n                            </td>\n                            <td class=\"calendar-cell\" tappable (click)=\"select(tm.time, tm.events)\">\n                                <ng-template [ngTemplateOutlet]=\"dayviewNormalEventSectionTemplate\"\n                                             [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts, eventTemplate:dayviewNormalEventTemplate}\">\n                                </ng-template>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </init-position-scroll>\n                <init-position-scroll *ngIf=\"0!==currentViewIndex\" class=\"dayview-normal-event-container\"\n                                      [initPosition]=\"initScrollPosition\">\n                    <table class=\"table table-bordered table-fixed dayview-normal-event-table\">\n                        <tbody>\n                        <tr *ngFor=\"let tm of views[0].rows; let i = index\">\n                            <td class=\"calendar-hour-column text-center\">\n                                {{hourColumnLabels[i]}}\n                            </td>\n                            <td class=\"calendar-cell\">\n                                <ng-template [ngTemplateOutlet]=\"dayviewInactiveNormalEventSectionTemplate\"\n                                             [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts}\">\n                                </ng-template>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </init-position-scroll>\n            </ion-slide>\n            <ion-slide class=\"slide-container\">\n                <div class=\"dayview-allday-table\">\n                    <div class=\"dayview-allday-label\">{{allDayLabel}}</div>\n                    <div class=\"dayview-allday-content-wrapper scroll-content\">\n                        <table class=\"table table-bordered dayview-allday-content-table\">\n                            <tbody>\n                            <tr>\n                                <td class=\"calendar-cell\" [ngClass]=\"{'calendar-event-wrap':views[1].allDayEvents.length>0}\"\n                                    [ngStyle]=\"{height: 25*views[1].allDayEvents.length+'px'}\"\n                                    *ngIf=\"1===currentViewIndex\">\n                                    <ng-template [ngTemplateOutlet]=\"dayviewAllDayEventSectionTemplate\"\n                                                 [ngTemplateOutletContext]=\"{allDayEvents:views[1].allDayEvents,eventTemplate:dayviewAllDayEventTemplate}\">\n                                    </ng-template>\n                                </td>\n                                <td class=\"calendar-cell\" *ngIf=\"1!==currentViewIndex\">\n                                    <ng-template [ngTemplateOutlet]=\"dayviewInactiveAllDayEventSectionTemplate\"\n                                                 [ngTemplateOutletContext]=\"{allDayEvents:views[1].allDayEvents}\">\n                                    </ng-template>\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <init-position-scroll *ngIf=\"1===currentViewIndex\" class=\"dayview-normal-event-container\"\n                                      [initPosition]=\"initScrollPosition\" [emitEvent]=\"preserveScrollPosition\"\n                                      (onScroll)=\"setScrollPosition($event)\">\n                    <table class=\"table table-bordered table-fixed dayview-normal-event-table\">\n                        <tbody>\n                        <tr *ngFor=\"let tm of views[1].rows; let i = index\">\n                            <td class=\"calendar-hour-column text-center\">\n                                {{hourColumnLabels[i]}}\n                            </td>\n                            <td class=\"calendar-cell\" tappable (click)=\"select(tm.time, tm.events)\">\n                                <ng-template [ngTemplateOutlet]=\"dayviewNormalEventSectionTemplate\"\n                                             [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts, eventTemplate:dayviewNormalEventTemplate}\">\n                                </ng-template>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </init-position-scroll>\n                <init-position-scroll *ngIf=\"1!==currentViewIndex\" class=\"dayview-normal-event-container\"\n                                      [initPosition]=\"initScrollPosition\">\n                    <table class=\"table table-bordered table-fixed dayview-normal-event-table\">\n                        <tbody>\n                        <tr *ngFor=\"let tm of views[1].rows; let i = index\">\n                            <td class=\"calendar-hour-column text-center\">\n                                {{hourColumnLabels[i]}}\n                            </td>\n                            <td class=\"calendar-cell\">\n                                <ng-template [ngTemplateOutlet]=\"dayviewInactiveNormalEventSectionTemplate\"\n                                             [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts}\">\n                                </ng-template>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </init-position-scroll>\n            </ion-slide>\n            <ion-slide class=\"slide-container\">\n                <div class=\"dayview-allday-table\">\n                    <div class=\"dayview-allday-label\">{{allDayLabel}}</div>\n                    <div class=\"dayview-allday-content-wrapper scroll-content\">\n                        <table class=\"table table-bordered dayview-allday-content-table\">\n                            <tbody>\n                            <tr>\n                                <td class=\"calendar-cell\" [ngClass]=\"{'calendar-event-wrap':views[2].allDayEvents.length>0}\"\n                                    [ngStyle]=\"{height: 25*views[2].allDayEvents.length+'px'}\"\n                                    *ngIf=\"2===currentViewIndex\">\n                                    <ng-template [ngTemplateOutlet]=\"dayviewAllDayEventSectionTemplate\"\n                                                 [ngTemplateOutletContext]=\"{allDayEvents:views[2].allDayEvents,eventTemplate:dayviewAllDayEventTemplate}\">\n                                    </ng-template>\n                                </td>\n                                <td class=\"calendar-cell\" *ngIf=\"2!==currentViewIndex\">\n                                    <ng-template [ngTemplateOutlet]=\"dayviewInactiveAllDayEventSectionTemplate\"\n                                                 [ngTemplateOutletContext]=\"{allDayEvents:views[2].allDayEvents}\">\n                                    </ng-template>\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <init-position-scroll *ngIf=\"2===currentViewIndex\" class=\"dayview-normal-event-container\"\n                                      [initPosition]=\"initScrollPosition\" [emitEvent]=\"preserveScrollPosition\"\n                                      (onScroll)=\"setScrollPosition($event)\">\n                    <table class=\"table table-bordered table-fixed dayview-normal-event-table\">\n                        <tbody>\n                        <tr *ngFor=\"let tm of views[2].rows; let i = index\">\n                            <td class=\"calendar-hour-column text-center\">\n                                {{hourColumnLabels[i]}}\n                            </td>\n                            <td class=\"calendar-cell\" tappable (click)=\"select(tm.time, tm.events)\">\n                                <ng-template [ngTemplateOutlet]=\"dayviewNormalEventSectionTemplate\"\n                                             [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts, eventTemplate:dayviewNormalEventTemplate}\">\n                                </ng-template>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </init-position-scroll>\n                <init-position-scroll *ngIf=\"2!==currentViewIndex\" class=\"dayview-normal-event-container\"\n                                      [initPosition]=\"initScrollPosition\">\n                    <table class=\"table table-bordered table-fixed dayview-normal-event-table\">\n                        <tbody>\n                        <tr *ngFor=\"let tm of views[2].rows; let i = index\">\n                            <td class=\"calendar-hour-column text-center\">\n                                {{hourColumnLabels[i]}}\n                            </td>\n                            <td class=\"calendar-cell\">\n                                <ng-template [ngTemplateOutlet]=\"dayviewInactiveNormalEventSectionTemplate\"\n                                             [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts}\">\n                                </ng-template>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </init-position-scroll>\n            </ion-slide>\n        </ion-slides>\n    `,\n    styles: [`\n        .table-fixed {\n            table-layout: fixed;\n        }\n\n        .table {\n            width: 100%;\n            max-width: 100%;\n            background-color: transparent;\n        }\n\n        .table > thead > tr > th, .table > tbody > tr > th, .table > tfoot > tr > th, .table > thead > tr > td,\n        .table > tbody > tr > td, .table > tfoot > tr > td {\n            padding: 8px;\n            line-height: 20px;\n            vertical-align: top;\n        }\n\n        .table > thead > tr > th {\n            vertical-align: bottom;\n            border-bottom: 2px solid #ddd;\n        }\n\n        .table > thead:first-child > tr:first-child > th, .table > thead:first-child > tr:first-child > td {\n            border-top: 0\n        }\n\n        .table > tbody + tbody {\n            border-top: 2px solid #ddd;\n        }\n\n        .table-bordered {\n            border: 1px solid #ddd;\n        }\n\n        .table-bordered > thead > tr > th, .table-bordered > tbody > tr > th, .table-bordered > tfoot > tr > th,\n        .table-bordered > thead > tr > td, .table-bordered > tbody > tr > td, .table-bordered > tfoot > tr > td {\n            border: 1px solid #ddd;\n        }\n\n        .table-bordered > thead > tr > th, .table-bordered > thead > tr > td {\n            border-bottom-width: 2px;\n        }\n\n        .table-striped > tbody > tr:nth-child(odd) > td, .table-striped > tbody > tr:nth-child(odd) > th {\n            background-color: #f9f9f9\n        }\n\n        .calendar-hour-column {\n            width: 50px;\n            white-space: nowrap;\n        }\n\n        .calendar-event-wrap {\n            position: relative;\n            width: 100%;\n            height: 100%;\n        }\n\n        .calendar-event {\n            position: absolute;\n            padding: 2px;\n            cursor: pointer;\n            z-index: 10000;\n        }\n\n        .slides-container {\n            height: 100%;\n        }\n\n        .slide-container {\n            display: block;\n        }\n\n        .calendar-cell {\n            padding: 0 !important;\n            height: 37px;\n        }\n\n        .dayview-allday-label {\n            float: left;\n            height: 100%;\n            line-height: 50px;\n            text-align: center;\n            width: 50px;\n            border-left: 1px solid #ddd;\n        }\n\n        [dir=\"rtl\"] .dayview-allday-label {\n            border-right: 1px solid #ddd;\n            float: right;\n        }\n\n        .dayview-allday-content-wrapper {\n            margin-left: 50px;\n            overflow: hidden;\n            height: 51px;\n        }\n\n        [dir=\"rtl\"] .dayview-allday-content-wrapper {\n            margin-left: 0;\n            margin-right: 50px;\n        }\n\n        .dayview-allday-content-table {\n            min-height: 50px;\n        }\n\n        .dayview-allday-content-table td {\n            border-left: 1px solid #ddd;\n            border-right: 1px solid #ddd;\n        }\n\n        .dayview-allday-table {\n            height: 50px;\n            position: relative;\n            border-bottom: 1px solid #ddd;\n            font-size: 14px;\n        }\n\n        .dayview-normal-event-container {\n            margin-top: 50px;\n            overflow: hidden;\n            left: 0;\n            right: 0;\n            top: 0;\n            bottom: 0;\n            position: absolute;\n            font-size: 14px;\n        }\n\n        .scroll-content {\n            overflow-y: auto;\n            overflow-x: hidden;\n        }\n\n        ::-webkit-scrollbar,\n        *::-webkit-scrollbar {\n            display: none;\n        }\n\n        .table > tbody > tr > td.calendar-hour-column {\n            padding-left: 0;\n            padding-right: 0;\n            vertical-align: middle;\n        }\n\n        @media (max-width: 750px) {\n            .dayview-allday-label, .calendar-hour-column {\n                width: 31px;\n                font-size: 12px;\n            }\n\n            .dayview-allday-label {\n                padding-top: 4px;\n            }\n\n            .table > tbody > tr > td.calendar-hour-column {\n                padding-left: 0;\n                padding-right: 0;\n                vertical-align: middle;\n                line-height: 12px;\n            }\n\n            .dayview-allday-label {\n                line-height: 20px;\n            }\n\n            .dayview-allday-content-wrapper {\n                margin-left: 31px;\n            }\n\n            [dir=\"rtl\"] .dayview-allday-content-wrapper {\n                margin-left: 0;\n                margin-right: 31px;\n            }\n        }\n    `],\n    encapsulation: ViewEncapsulation.None\n})\nexport class DayViewComponent implements ICalendarComponent, OnInit, OnChanges, OnDestroy, AfterViewInit {\n\n    constructor(private calendarService: CalendarService, private elm: ElementRef) {\n    }\n\n    @ViewChild('daySlider', {static: true}) slider: IonSlides;\n    @HostBinding('class.dayview') class = true;\n\n    @Input() dayviewAllDayEventTemplate: TemplateRef<IDisplayAllDayEvent>;\n    @Input() dayviewNormalEventTemplate: TemplateRef<IDisplayEvent>;\n    @Input() dayviewAllDayEventSectionTemplate: TemplateRef<IDayViewAllDayEventSectionTemplateContext>;\n    @Input() dayviewNormalEventSectionTemplate: TemplateRef<IDayViewNormalEventSectionTemplateContext>;\n    @Input() dayviewInactiveAllDayEventSectionTemplate: TemplateRef<IDayViewAllDayEventSectionTemplateContext>;\n    @Input() dayviewInactiveNormalEventSectionTemplate: TemplateRef<IDayViewNormalEventSectionTemplateContext>;\n\n    @Input() formatHourColumn: string;\n    @Input() formatDayTitle: string;\n    @Input() allDayLabel: string;\n    @Input() hourParts: number;\n    @Input() eventSource: IEvent[];\n    @Input() markDisabled: (date: Date) => boolean;\n    @Input() locale: string;\n    @Input() dateFormatter: IDateFormatter;\n    @Input() dir = '';\n    @Input() scrollToHour = 0;\n    @Input() preserveScrollPosition: boolean;\n    @Input() lockSwipeToPrev: boolean;\n    @Input() lockSwipes: boolean;\n    @Input() startHour: number;\n    @Input() endHour: number;\n    @Input() sliderOptions: any;\n    @Input() hourSegments: number;\n\n    @Output() onRangeChanged = new EventEmitter<IRange>();\n    @Output() onEventSelected = new EventEmitter<IEvent>();\n    @Output() onTimeSelected = new EventEmitter<ITimeSelected>();\n    @Output() onTitleChanged = new EventEmitter<string>(true);\n\n    public views: IDayView[] = [];\n    public currentViewIndex = 0;\n    public direction = 0;\n    public mode: CalendarMode = 'day';\n    public range: IRange;\n\n    private inited = false;\n    private callbackOnInit = true;\n    private currentDateChangedFromParentSubscription: Subscription;\n    private eventSourceChangedSubscription: Subscription;\n    private slideChangedSubscription: Subscription;\n    private slideUpdatedSubscription: Subscription;\n\n    public hourColumnLabels: string[];\n    public initScrollPosition: number;\n    private formatTitle: (date: Date) => string;\n    private formatHourColumnLabel: (date: Date) => string;\n    private hourRange: number;\n\n    static createDateObjects(startTime: Date, startHour: number, endHour: number, timeInterval: number): IDayViewRow[] {\n        const rows: IDayViewRow[] = [],\n            currentHour = 0,\n            currentDate = startTime.getDate();\n        let time: Date,\n            hourStep,\n            minStep;\n\n        if (timeInterval < 1) {\n            hourStep = Math.floor(1 / timeInterval);\n            minStep = 60;\n        } else {\n            hourStep = 1;\n            minStep = Math.floor(60 / timeInterval);\n        }\n\n        for (let hour = startHour; hour < endHour; hour += hourStep) {\n            for (let interval = 0; interval < 60; interval += minStep) {\n                time = new Date(startTime.getTime());\n                time.setHours(currentHour + hour, interval);\n                time.setDate(currentDate);\n                rows.push({\n                    time,\n                    events: []\n                });\n            }\n        }\n        return rows;\n    }\n\n    private static compareEventByStartOffset(eventA: IDisplayEvent, eventB: IDisplayEvent) {\n        return eventA.startOffset - eventB.startOffset;\n    }\n\n    private static calculateWidth(orderedEvents: IDisplayEvent[], size: number, hourParts: number) {\n        const totalSize = size * hourParts,\n            cells: { calculated: boolean; events: IDisplayEvent[]; }[] = new Array(totalSize);\n\n        // sort by position in descending order, the right most columns should be calculated first\n        orderedEvents.sort((eventA, eventB) => {\n            return eventB.position - eventA.position;\n        });\n        for (let i = 0; i < totalSize; i += 1) {\n            cells[i] = {\n                calculated: false,\n                events: []\n            };\n        }\n        const len = orderedEvents.length;\n        for (let i = 0; i < len; i += 1) {\n            const event = orderedEvents[i];\n            let index = event.startIndex * hourParts + event.startOffset;\n            while (index < event.endIndex * hourParts - event.endOffset) {\n                cells[index].events.push(event);\n                index += 1;\n            }\n        }\n\n        let i = 0;\n        while (i < len) {\n            let event = orderedEvents[i];\n            if (!event.overlapNumber) {\n                const overlapNumber = event.position + 1;\n                event.overlapNumber = overlapNumber;\n                const eventQueue = [event];\n                while (event = eventQueue.shift()) {\n                    let index = event.startIndex * hourParts + event.startOffset;\n                    while (index < event.endIndex * hourParts - event.endOffset) {\n                        if (!cells[index].calculated) {\n                            cells[index].calculated = true;\n                            if (cells[index].events) {\n                                const eventCountInCell = cells[index].events.length;\n                                for (let j = 0; j < eventCountInCell; j += 1) {\n                                    const currentEventInCell = cells[index].events[j];\n                                    if (!currentEventInCell.overlapNumber) {\n                                        currentEventInCell.overlapNumber = overlapNumber;\n                                        eventQueue.push(currentEventInCell);\n                                    }\n                                }\n                            }\n                        }\n                        index += 1;\n                    }\n                }\n            }\n            i += 1;\n        }\n    }\n\n    ngOnInit() {\n        if (!this.sliderOptions) {\n            this.sliderOptions = {};\n        }\n        this.sliderOptions.loop = true;\n\n        this.hourRange = (this.endHour - this.startHour) * this.hourSegments;\n        if (this.dateFormatter && this.dateFormatter.formatDayViewTitle) {\n            this.formatTitle = this.dateFormatter.formatDayViewTitle;\n        } else {\n            const datePipe = new DatePipe(this.locale);\n            this.formatTitle = function(date: Date) {\n                return datePipe.transform(date, this.formatDayTitle);\n            };\n        }\n\n        if (this.dateFormatter && this.dateFormatter.formatDayViewHourColumn) {\n            this.formatHourColumnLabel = this.dateFormatter.formatDayViewHourColumn;\n        } else {\n            const datePipe = new DatePipe(this.locale);\n            this.formatHourColumnLabel = function(date: Date) {\n                return datePipe.transform(date, this.formatHourColumn);\n            };\n        }\n\n        if (this.lockSwipeToPrev) {\n            this.slider.lockSwipeToPrev(true);\n        }\n\n        if (this.lockSwipes) {\n            this.slider.lockSwipes(true);\n        }\n\n        this.refreshView();\n        this.hourColumnLabels = this.getHourColumnLabels();\n\n        this.inited = true;\n\n        this.currentDateChangedFromParentSubscription = this.calendarService.currentDateChangedFromParent$.subscribe(currentDate => {\n            this.refreshView();\n        });\n\n        this.eventSourceChangedSubscription = this.calendarService.eventSourceChanged$.subscribe(() => {\n            this.onDataLoaded();\n        });\n\n        this.slideChangedSubscription = this.calendarService.slideChanged$.subscribe(direction => {\n            if (direction === 1) {\n                this.slider.slideNext();\n            } else if (direction === -1) {\n                this.slider.slidePrev();\n            }\n        });\n\n        this.slideUpdatedSubscription = this.calendarService.slideUpdated$.subscribe(() => {\n            this.slider.update();\n        });\n    }\n\n    ngAfterViewInit() {\n        const title = this.getTitle();\n        this.onTitleChanged.emit(title);\n\n        if (this.scrollToHour > 0) {\n            const hourColumns = this.elm.nativeElement.querySelector('.dayview-normal-event-container').querySelectorAll('.calendar-hour-column');\n            const me = this;\n            setTimeout(() => {\n                me.initScrollPosition = hourColumns[me.scrollToHour - me.startHour].offsetTop;\n            }, 50);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!this.inited) {\n            return;\n        }\n\n        const eventSourceChange = changes.eventSource;\n        if (eventSourceChange && eventSourceChange.currentValue) {\n            this.onDataLoaded();\n        }\n\n        const lockSwipeToPrev = changes.lockSwipeToPrev;\n        if (lockSwipeToPrev) {\n            this.slider.lockSwipeToPrev(lockSwipeToPrev.currentValue);\n        }\n\n        const lockSwipes = changes.lockSwipes;\n        if (lockSwipes) {\n            this.slider.lockSwipes(lockSwipes.currentValue);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.currentDateChangedFromParentSubscription) {\n            this.currentDateChangedFromParentSubscription.unsubscribe();\n            this.currentDateChangedFromParentSubscription = null;\n        }\n\n        if (this.eventSourceChangedSubscription) {\n            this.eventSourceChangedSubscription.unsubscribe();\n            this.eventSourceChangedSubscription = null;\n        }\n\n        if (this.slideChangedSubscription) {\n            this.slideChangedSubscription.unsubscribe();\n            this.slideChangedSubscription = null;\n        }\n\n        if (this.slideUpdatedSubscription) {\n            this.slideUpdatedSubscription.unsubscribe();\n            this.slideUpdatedSubscription = null;\n        }\n    }\n\n    onSlideChanged() {\n        if (this.callbackOnInit) {\n            this.callbackOnInit = false;\n            return;\n        }\n\n        let direction = 0;\n        const currentViewIndex = this.currentViewIndex;\n\n        this.slider.getActiveIndex().then((currentSlideIndex) => {\n            currentSlideIndex = (currentSlideIndex + 2) % 3;\n            if(isNaN(currentSlideIndex)) {\n                currentSlideIndex = currentViewIndex;\n            }\n\n            if (currentSlideIndex - currentViewIndex === 1) {\n                direction = 1;\n            } else if (currentSlideIndex === 0 && currentViewIndex === 2) {\n                direction = 1;\n                this.slider.slideTo(1, 0, false);\n            } else if (currentViewIndex - currentSlideIndex === 1) {\n                direction = -1;\n            } else if (currentSlideIndex === 2 && currentViewIndex === 0) {\n                direction = -1;\n                this.slider.slideTo(3, 0, false);\n            }\n            this.currentViewIndex = currentSlideIndex;\n            this.move(direction);\n        });\n    }\n\n    move(direction: number) {\n        if (direction === 0) {\n            return;\n        }\n\n        this.direction = direction;\n        const adjacentDate = this.calendarService.getAdjacentCalendarDate(this.mode, direction);\n        this.calendarService.setCurrentDate(adjacentDate);\n        this.refreshView();\n        this.direction = 0;\n    }\n\n    private getHourColumnLabels(): string[] {\n        const hourColumnLabels: string[] = [];\n        for (let hour = 0, length = this.views[0].rows.length; hour < length; hour += 1) {\n            // handle edge case for DST\n            if (hour === 0 && this.views[0].rows[hour].time.getHours() !== this.startHour) {\n                const time = new Date(this.views[0].rows[hour].time);\n                time.setDate(time.getDate() + 1);\n                time.setHours(this.startHour);\n                hourColumnLabels.push(this.formatHourColumnLabel(time));\n            } else {\n                hourColumnLabels.push(this.formatHourColumnLabel(this.views[0].rows[hour].time));\n            }\n        }\n        return hourColumnLabels;\n    }\n\n    getViewData(startTime: Date): IDayView {\n        return {\n            rows: DayViewComponent.createDateObjects(startTime, this.startHour, this.endHour, this.hourSegments),\n            allDayEvents: []\n        };\n    }\n\n    getRange(currentDate: Date): IRange {\n        const year = currentDate.getFullYear(),\n            month = currentDate.getMonth(),\n            date = currentDate.getDate(),\n            startTime = new Date(year, month, date, 12, 0, 0),\n            endTime = new Date(year, month, date + 1, 12, 0, 0);\n\n        return {\n            startTime,\n            endTime\n        };\n    }\n\n    onDataLoaded() {\n        const eventSource = this.eventSource,\n            len = eventSource ? eventSource.length : 0,\n            startTime = this.range.startTime,\n            endTime = this.range.endTime,\n            utcStartTime = Date.UTC(startTime.getFullYear(), startTime.getMonth(), startTime.getDate()),\n            utcEndTime = Date.UTC(endTime.getFullYear(), endTime.getMonth(), endTime.getDate()),\n            currentViewIndex = this.currentViewIndex,\n            rows = this.views[currentViewIndex].rows,\n            allDayEvents: IDisplayAllDayEvent[] = this.views[currentViewIndex].allDayEvents = [],\n            oneHour = 3600000,\n            eps = 0.016,\n            rangeStartRowIndex = this.startHour * this.hourSegments,\n            rangeEndRowIndex = this.endHour * this.hourSegments;\n        let normalEventInRange = false;\n\n        for (let hour = 0; hour < this.hourRange; hour += 1) {\n            rows[hour].events = [];\n        }\n\n        for (let i = 0; i < len; i += 1) {\n            const event = eventSource[i];\n            const eventStartTime = event.startTime;\n            const eventEndTime = event.endTime;\n            let eventUTCStartTime: number,\n                eventUTCEndTime: number;\n\n            if (event.allDay) {\n                eventUTCStartTime = eventStartTime.getTime();\n                eventUTCEndTime = eventEndTime.getTime();\n            } else {\n                eventUTCStartTime = Date.UTC(eventStartTime.getFullYear(), eventStartTime.getMonth(), eventStartTime.getDate());\n                eventUTCEndTime = Date.UTC(eventEndTime.getFullYear(), eventEndTime.getMonth(), eventEndTime.getDate() + 1);\n            }\n\n            if (eventUTCEndTime <= utcStartTime || eventUTCStartTime >= utcEndTime || eventStartTime >= eventEndTime) {\n                continue;\n            }\n\n            if (event.allDay) {\n                allDayEvents.push({\n                    event\n                });\n            } else {\n                normalEventInRange = true;\n\n                let timeDifferenceStart: number;\n                if (eventUTCStartTime < utcStartTime) {\n                    timeDifferenceStart = 0;\n                } else {\n                    timeDifferenceStart = (eventStartTime.getHours() + eventStartTime.getMinutes() / 60) * this.hourSegments;\n                }\n\n                let timeDifferenceEnd: number;\n                if (eventUTCEndTime > utcEndTime) {\n                    timeDifferenceEnd = (utcEndTime - utcStartTime) / oneHour * this.hourSegments;\n                } else {\n                    timeDifferenceEnd = (eventEndTime.getHours() + eventEndTime.getMinutes() / 60) * this.hourSegments;\n                }\n\n                let startIndex = Math.floor(timeDifferenceStart);\n                let endIndex = Math.ceil(timeDifferenceEnd - eps);\n                let startOffset = 0;\n                let endOffset = 0;\n                if (this.hourParts !== 1) {\n                    if (startIndex < rangeStartRowIndex) {\n                        startOffset = 0;\n                    } else {\n                        startOffset = Math.floor((timeDifferenceStart - startIndex) * this.hourParts);\n                    }\n                    if (endIndex > rangeEndRowIndex) {\n                        endOffset = 0;\n                    } else {\n                        endOffset = Math.floor((endIndex - timeDifferenceEnd) * this.hourParts);\n                    }\n                }\n\n                if (startIndex < rangeStartRowIndex) {\n                    startIndex = 0;\n                } else {\n                    startIndex -= rangeStartRowIndex;\n                }\n                if (endIndex > rangeEndRowIndex) {\n                    endIndex = rangeEndRowIndex;\n                }\n                endIndex -= rangeStartRowIndex;\n\n                if (startIndex < endIndex) {\n                    const displayEvent = {\n                        event,\n                        startIndex,\n                        endIndex,\n                        startOffset,\n                        endOffset\n                    };\n\n                    let eventSet = rows[startIndex].events;\n                    if (eventSet) {\n                        eventSet.push(displayEvent);\n                    } else {\n                        eventSet = [];\n                        eventSet.push(displayEvent);\n                        rows[startIndex].events = eventSet;\n                    }\n                }\n            }\n        }\n\n        if (normalEventInRange) {\n            let orderedEvents: IDisplayEvent[] = [];\n            for (let hour = 0; hour < this.hourRange; hour += 1) {\n                if (rows[hour].events) {\n                    rows[hour].events.sort(DayViewComponent.compareEventByStartOffset);\n\n                    orderedEvents = orderedEvents.concat(rows[hour].events);\n                }\n            }\n            if (orderedEvents.length > 0) {\n                this.placeEvents(orderedEvents);\n            }\n        }\n    }\n\n    refreshView() {\n        this.range = this.getRange(this.calendarService.currentDate);\n        if (this.inited) {\n            const title = this.getTitle();\n            this.onTitleChanged.emit(title);\n        }\n\n        this.calendarService.populateAdjacentViews(this);\n        this.calendarService.rangeChanged(this);\n    }\n\n    getTitle(): string {\n        const startingDate = new Date(this.range.startTime.getTime());\n        startingDate.setHours(12, 0, 0, 0);\n        return this.formatTitle(startingDate);\n    }\n\n    select(selectedTime: Date, events: IDisplayEvent[]) {\n        let disabled = false;\n        if (this.markDisabled) {\n            disabled = this.markDisabled(selectedTime);\n        }\n\n        this.onTimeSelected.emit({\n            selectedTime,\n            events: events.map(e => e.event),\n            disabled\n        });\n    }\n\n    placeEvents(orderedEvents: IDisplayEvent[]) {\n        this.calculatePosition(orderedEvents);\n        DayViewComponent.calculateWidth(orderedEvents, this.hourRange, this.hourParts);\n    }\n\n    placeAllDayEvents(orderedEvents: IDisplayEvent[]) {\n        this.calculatePosition(orderedEvents);\n    }\n\n    overlap(event1: IDisplayEvent, event2: IDisplayEvent): boolean {\n        let earlyEvent = event1,\n            lateEvent = event2;\n        if (event1.startIndex > event2.startIndex || (event1.startIndex === event2.startIndex && event1.startOffset > event2.startOffset)) {\n            earlyEvent = event2;\n            lateEvent = event1;\n        }\n\n        if (earlyEvent.endIndex <= lateEvent.startIndex) {\n            return false;\n        } else {\n            return !(earlyEvent.endIndex - lateEvent.startIndex === 1 && earlyEvent.endOffset + lateEvent.startOffset >= this.hourParts);\n        }\n    }\n\n    calculatePosition(events: IDisplayEvent[]) {\n        const len = events.length,\n            isForbidden: boolean[] = new Array(len);\n        let maxColumn = 0,\n            col: number;\n\n\n        for (let i = 0; i < len; i += 1) {\n            for (col = 0; col < maxColumn; col += 1) {\n                isForbidden[col] = false;\n            }\n            for (let j = 0; j < i; j += 1) {\n                if (this.overlap(events[i], events[j])) {\n                    isForbidden[events[j].position] = true;\n                }\n            }\n            for (col = 0; col < maxColumn; col += 1) {\n                if (!isForbidden[col]) {\n                    break;\n                }\n            }\n            if (col < maxColumn) {\n                events[i].position = col;\n            } else {\n                events[i].position = maxColumn++;\n            }\n        }\n\n        if (this.dir === 'rtl') {\n            for (let i = 0; i < len; i += 1) {\n                events[i].position = maxColumn - 1 - events[i].position;\n            }\n        }\n    }\n\n    eventSelected(event: IEvent) {\n        this.onEventSelected.emit(event);\n    }\n\n    setScrollPosition(scrollPosition: number) {\n        this.initScrollPosition = scrollPosition;\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output, TemplateRef, Inject, LOCALE_ID } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { CalendarService } from './calendar.service';\n\nexport interface IEvent {\n    allDay: boolean;\n    endTime: Date;\n    startTime: Date;\n    title: string;\n}\n\nexport interface IRange {\n    startTime: Date;\n    endTime: Date;\n}\n\nexport interface IView {\n}\n\nexport interface IDayView extends IView {\n    allDayEvents: IDisplayAllDayEvent[];\n    rows: IDayViewRow[];\n}\n\nexport interface IDayViewRow {\n    events: IDisplayEvent[];\n    time: Date;\n}\n\nexport interface IMonthView extends IView {\n    dates: IMonthViewRow[];\n    dayHeaders: string[];\n}\n\nexport interface IMonthViewRow {\n    current?: boolean;\n    date: Date;\n    events: IEvent[];\n    hasEvent?: boolean;\n    label: string;\n    secondary: boolean;\n    selected?: boolean;\n    disabled: boolean;\n}\n\nexport interface IWeekView extends IView {\n    dates: IWeekViewDateRow[];\n    rows: IWeekViewRow[][];\n}\n\nexport interface IWeekViewDateRow {\n    current?: boolean;\n    date: Date;\n    events: IDisplayEvent[];\n    hasEvent?: boolean;\n    selected?: boolean;\n    dayHeader: string;\n}\n\nexport interface IWeekViewRow {\n    events: IDisplayEvent[];\n    time: Date;\n}\n\nexport interface IDisplayEvent {\n    endIndex: number;\n    endOffset?: number;\n    event: IEvent;\n    startIndex: number;\n    startOffset?: number;\n    overlapNumber?: number;\n    position?: number;\n}\n\nexport interface IDisplayWeekViewHeader {\n    viewDate: IWeekViewDateRow;\n}\n\nexport interface IDisplayAllDayEvent {\n    event: IEvent;\n}\n\nexport interface ICalendarComponent {\n    currentViewIndex: number;\n    direction: number;\n    eventSource: IEvent[];\n    getRange: { (date:Date): IRange; };\n    getViewData: { (date:Date): IView };\n    mode: CalendarMode;\n    range: IRange;\n    views: IView[];\n    onDataLoaded: { (): void };\n    onRangeChanged: EventEmitter<IRange>;\n}\n\nexport interface ITimeSelected {\n    events: IEvent[];\n    selectedTime: Date;\n    disabled: boolean;\n}\n\nexport interface IMonthViewDisplayEventTemplateContext {\n    view: IView;\n    row: number;\n    col: number;\n}\n\nexport interface IMonthViewEventDetailTemplateContext {\n    selectedDate: ITimeSelected;\n    noEventsLabel: string;\n}\n\nexport interface IWeekViewAllDayEventSectionTemplateContext {\n    day: IWeekViewDateRow,\n    eventTemplate: TemplateRef<IDisplayAllDayEvent>\n}\n\nexport interface IWeekViewNormalEventSectionTemplateContext {\n    tm: IWeekViewRow,\n    eventTemplate: TemplateRef<IDisplayEvent>\n}\n\nexport interface IDayViewAllDayEventSectionTemplateContext {\n    alldayEvents: IDisplayAllDayEvent[],\n    eventTemplate: TemplateRef<IDisplayAllDayEvent>\n}\n\nexport interface IDayViewNormalEventSectionTemplateContext {\n    tm: IDayViewRow,\n    eventTemplate: TemplateRef<IDisplayEvent>\n}\n\nexport interface IDateFormatter {\n    formatMonthViewDay?: { (date:Date): string; };\n    formatMonthViewDayHeader?: { (date:Date): string; };\n    formatMonthViewTitle?: { (date:Date): string; };\n    formatWeekViewDayHeader?: { (date:Date): string; };\n    formatWeekViewTitle?: { (date:Date): string; };\n    formatWeekViewHourColumn?: { (date:Date): string; };\n    formatDayViewTitle?: { (date:Date): string; };\n    formatDayViewHourColumn?: { (date:Date): string; };\n}\n\nexport type CalendarMode = 'day' | 'month' | 'week';\n\nexport type QueryMode = 'local' | 'remote';\n\nexport enum Step {\n    QuarterHour = 15,\n    HalfHour = 30,\n    Hour = 60\n}\n\n@Component({\n    selector: 'calendar',\n    template: `\n        <ng-template #monthviewDefaultDisplayEventTemplate let-view=\"view\" let-row=\"row\" let-col=\"col\">\n            {{view.dates[row*7+col].label}}\n        </ng-template>\n        <ng-template #monthviewDefaultEventDetailTemplate let-showEventDetail=\"showEventDetail\" let-selectedDate=\"selectedDate\" let-noEventsLabel=\"noEventsLabel\">\n            <ion-list class=\"event-detail-container\" has-bouncing=\"false\" *ngIf=\"showEventDetail\" overflow-scroll=\"false\">\n                <ion-item *ngFor=\"let event of selectedDate?.events\" (click)=\"eventSelected(event)\">\n                        <span *ngIf=\"!event.allDay\" class=\"monthview-eventdetail-timecolumn\">{{event.startTime|date: 'HH:mm'}}\n                            -\n                            {{event.endTime|date: 'HH:mm'}}\n                        </span>\n                    <span *ngIf=\"event.allDay\" class=\"monthview-eventdetail-timecolumn\">{{allDayLabel}}</span>\n                    <span class=\"event-detail\">  |  {{event.title}}</span>\n                </ion-item>\n                <ion-item *ngIf=\"selectedDate?.events.length==0\">\n                    <div class=\"no-events-label\">{{noEventsLabel}}</div>\n                </ion-item>\n            </ion-list>\n        </ng-template>\n        <ng-template #defaultWeekviewHeaderTemplate let-viewDate=\"viewDate\">\n            {{ viewDate.dayHeader }}\n        </ng-template>\n        <ng-template #defaultAllDayEventTemplate let-displayEvent=\"displayEvent\">\n            <div class=\"calendar-event-inner\">{{displayEvent.event.title}}</div>\n        </ng-template>\n        <ng-template #defaultNormalEventTemplate let-displayEvent=\"displayEvent\">\n            <div class=\"calendar-event-inner\">{{displayEvent.event.title}}</div>\n        </ng-template>\n        <ng-template #defaultWeekViewAllDayEventSectionTemplate let-day=\"day\" let-eventTemplate=\"eventTemplate\">\n            <div [ngClass]=\"{'calendar-event-wrap': day.events}\" *ngIf=\"day.events\"\n                 [ngStyle]=\"{height: 25*day.events.length+'px'}\">\n                <div *ngFor=\"let displayEvent of day.events\" class=\"calendar-event\" tappable\n                     (click)=\"eventSelected(displayEvent.event)\"\n                     [ngStyle]=\"{top: 25*displayEvent.position+'px', width: 100*(displayEvent.endIndex-displayEvent.startIndex)+'%', height: '25px'}\">\n                    <ng-template [ngTemplateOutlet]=\"eventTemplate\"\n                                 [ngTemplateOutletContext]=\"{displayEvent:displayEvent}\">\n                    </ng-template>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #defaultDayViewAllDayEventSectionTemplate let-allDayEvents=\"allDayEvents\" let-eventTemplate=\"eventTemplate\">\n            <div *ngFor=\"let displayEvent of allDayEvents; let eventIndex=index\"\n                 class=\"calendar-event\" tappable\n                 (click)=\"eventSelected(displayEvent.event)\"\n                 [ngStyle]=\"{top: 25*eventIndex+'px',width: '100%',height:'25px'}\">\n                <ng-template [ngTemplateOutlet]=\"eventTemplate\"\n                             [ngTemplateOutletContext]=\"{displayEvent:displayEvent}\">\n                </ng-template>\n            </div>\n        </ng-template>\n        <ng-template #defaultNormalEventSectionTemplate let-tm=\"tm\" let-hourParts=\"hourParts\" let-eventTemplate=\"eventTemplate\">\n            <div [ngClass]=\"{'calendar-event-wrap': tm.events}\" *ngIf=\"tm.events\">\n                <div *ngFor=\"let displayEvent of tm.events\" class=\"calendar-event\" tappable\n                     (click)=\"eventSelected(displayEvent.event)\"\n                     [ngStyle]=\"{top: (37*displayEvent.startOffset/hourParts)+'px',left: 100/displayEvent.overlapNumber*displayEvent.position+'%', width: 100/displayEvent.overlapNumber+'%', height: 37*(displayEvent.endIndex -displayEvent.startIndex - (displayEvent.endOffset + displayEvent.startOffset)/hourParts)+'px'}\">\n                    <ng-template [ngTemplateOutlet]=\"eventTemplate\"\n                                 [ngTemplateOutletContext]=\"{displayEvent:displayEvent}\">\n                    </ng-template>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #defaultInactiveAllDayEventSectionTemplate>\n        </ng-template>\n        <ng-template #defaultInactiveNormalEventSectionTemplate>\n        </ng-template>\n\n        <div [ngSwitch]=\"calendarMode\" class=\"{{calendarMode}}view-container\">\n            <monthview *ngSwitchCase=\"'month'\"\n                [formatDay]=\"formatDay\"\n                [formatDayHeader]=\"formatDayHeader\"\n                [formatMonthTitle]=\"formatMonthTitle\"\n                [startingDayMonth]=\"startingDayMonth\"\n                [showEventDetail]=\"showEventDetail\"\n                [noEventsLabel]=\"noEventsLabel\"\n                [autoSelect]=\"autoSelect\"\n                [eventSource]=\"eventSource\"\n                [markDisabled]=\"markDisabled\"\n                [monthviewDisplayEventTemplate]=\"monthviewDisplayEventTemplate||monthviewDefaultDisplayEventTemplate\"\n                [monthviewInactiveDisplayEventTemplate]=\"monthviewInactiveDisplayEventTemplate||monthviewDefaultDisplayEventTemplate\"\n                [monthviewEventDetailTemplate]=\"monthviewEventDetailTemplate||monthviewDefaultEventDetailTemplate\"\n                [locale]=\"locale\"\n                [dateFormatter]=\"dateFormatter\"\n                [dir]=\"dir\"\n                [lockSwipeToPrev]=\"lockSwipeToPrev\"\n                [lockSwipes]=\"lockSwipes\"\n                [sliderOptions]=\"sliderOptions\"\n                (onRangeChanged)=\"rangeChanged($event)\"\n                (onEventSelected)=\"eventSelected($event)\"\n                (onTimeSelected)=\"timeSelected($event)\"\n                (onTitleChanged)=\"titleChanged($event)\">\n            </monthview>\n            <weekview *ngSwitchCase=\"'week'\"\n                [formatWeekTitle]=\"formatWeekTitle\"\n                [formatWeekViewDayHeader]=\"formatWeekViewDayHeader\"\n                [formatHourColumn]=\"formatHourColumn\"\n                [startingDayWeek]=\"startingDayWeek\"\n                [allDayLabel]=\"allDayLabel\"\n                [hourParts]=\"hourParts\"\n                [autoSelect]=\"autoSelect\"\n                [hourSegments]=\"hourSegments\"\n                [eventSource]=\"eventSource\"\n                [markDisabled]=\"markDisabled\"\n                [weekviewHeaderTemplate]=\"weekviewHeaderTemplate||defaultWeekviewHeaderTemplate\"\n                [weekviewAllDayEventTemplate]=\"weekviewAllDayEventTemplate||defaultAllDayEventTemplate\"\n                [weekviewNormalEventTemplate]=\"weekviewNormalEventTemplate||defaultNormalEventTemplate\"\n                [weekviewAllDayEventSectionTemplate]=\"weekviewAllDayEventSectionTemplate||defaultWeekViewAllDayEventSectionTemplate\"\n                [weekviewNormalEventSectionTemplate]=\"weekviewNormalEventSectionTemplate||defaultNormalEventSectionTemplate\"\n                [weekviewInactiveAllDayEventSectionTemplate]=\"weekviewInactiveAllDayEventSectionTemplate||defaultInactiveAllDayEventSectionTemplate\"\n                [weekviewInactiveNormalEventSectionTemplate]=\"weekviewInactiveNormalEventSectionTemplate||defaultInactiveNormalEventSectionTemplate\"\n                [locale]=\"locale\"\n                [dateFormatter]=\"dateFormatter\"\n                [dir]=\"dir\"\n                [scrollToHour]=\"scrollToHour\"\n                [preserveScrollPosition]=\"preserveScrollPosition\"\n                [lockSwipeToPrev]=\"lockSwipeToPrev\"\n                [lockSwipes]=\"lockSwipes\"\n                [startHour]=\"startHour\"\n                [endHour]=\"endHour\"\n                [sliderOptions]=\"sliderOptions\"\n                (onRangeChanged)=\"rangeChanged($event)\"\n                (onEventSelected)=\"eventSelected($event)\"\n                (onTimeSelected)=\"timeSelected($event)\"\n                (onTitleChanged)=\"titleChanged($event)\">\n            </weekview>\n            <dayview *ngSwitchCase=\"'day'\"\n                [formatDayTitle]=\"formatDayTitle\"\n                [formatHourColumn]=\"formatHourColumn\"\n                [allDayLabel]=\"allDayLabel\"\n                [hourParts]=\"hourParts\"\n                [hourSegments]=\"hourSegments\"\n                [eventSource]=\"eventSource\"\n                [markDisabled]=\"markDisabled\"\n                [dayviewAllDayEventTemplate]=\"dayviewAllDayEventTemplate||defaultAllDayEventTemplate\"\n                [dayviewNormalEventTemplate]=\"dayviewNormalEventTemplate||defaultNormalEventTemplate\"\n                [dayviewAllDayEventSectionTemplate]=\"dayviewAllDayEventSectionTemplate||defaultDayViewAllDayEventSectionTemplate\"\n                [dayviewNormalEventSectionTemplate]=\"dayviewNormalEventSectionTemplate||defaultNormalEventSectionTemplate\"\n                [dayviewInactiveAllDayEventSectionTemplate]=\"dayviewInactiveAllDayEventSectionTemplate||defaultInactiveAllDayEventSectionTemplate\"\n                [dayviewInactiveNormalEventSectionTemplate]=\"dayviewInactiveNormalEventSectionTemplate||defaultInactiveNormalEventSectionTemplate\"\n                [locale]=\"locale\"\n                [dateFormatter]=\"dateFormatter\"\n                [dir]=\"dir\"\n                [scrollToHour]=\"scrollToHour\"\n                [preserveScrollPosition]=\"preserveScrollPosition\"\n                [lockSwipeToPrev]=\"lockSwipeToPrev\"\n                [lockSwipes]=\"lockSwipes\"\n                [startHour]=\"startHour\"\n                [endHour]=\"endHour\"\n                [sliderOptions]=\"sliderOptions\"\n                (onRangeChanged)=\"rangeChanged($event)\"\n                (onEventSelected)=\"eventSelected($event)\"\n                (onTimeSelected)=\"timeSelected($event)\"\n                (onTitleChanged)=\"titleChanged($event)\">\n            </dayview>\n        </div>\n    `,\n    styles: [`\n        :host > div { height: 100%; }\n\n        .event-detail-container {\n          border-top: 2px darkgrey solid;\n        }\n\n        .no-events-label {\n          font-weight: bold;\n          color: darkgrey;\n          text-align: center;\n        }\n\n        .event-detail {\n          cursor: pointer;\n          white-space: nowrap;\n          text-overflow: ellipsis;\n        }\n\n        .monthview-eventdetail-timecolumn {\n          width: 110px;\n          overflow: hidden;\n        }\n\n        .calendar-event-inner {\n          overflow: hidden;\n          background-color: #3a87ad;\n          color: white;\n          height: 100%;\n          width: 100%;\n          padding: 2px;\n          line-height: 15px;\n          text-align: initial;\n        }\n\n        @media (max-width: 750px) {\n          .calendar-event-inner {\n            font-size: 12px;\n          }\n        }\n    `],\n    providers: [CalendarService]\n})\nexport class CalendarComponent implements OnInit {\n    @Input()\n    get currentDate():Date {\n        return this._currentDate;\n    }\n\n    set currentDate(val:Date) {\n        if (!val) {\n            val = new Date();\n        }\n\n        this._currentDate = val;\n        this.calendarService.setCurrentDate(val, true);\n        this.onCurrentDateChanged.emit(this._currentDate);\n    }\n\n    @Input() eventSource:IEvent[] = [];\n    @Input() calendarMode:CalendarMode = 'month';\n    @Input() formatDay:string = 'd';\n    @Input() formatDayHeader:string = 'EEE';\n    @Input() formatDayTitle:string = 'MMMM dd, yyyy';\n    @Input() formatWeekTitle:string = 'MMMM yyyy, \\'Week\\' w';\n    @Input() formatMonthTitle:string = 'MMMM yyyy';\n    @Input() formatWeekViewDayHeader:string = 'EEE d';\n    @Input() formatHourColumn:string = 'ha';\n    @Input() showEventDetail:boolean = true;\n    @Input() startingDayMonth:number = 0;\n    @Input() startingDayWeek:number = 0;\n    @Input() allDayLabel:string = 'all day';\n    @Input() noEventsLabel:string = 'No Events';\n    @Input() queryMode:QueryMode = 'local';\n    @Input() step:Step = Step.Hour;\n    @Input() timeInterval:number = 60;\n    @Input() autoSelect:boolean = true;\n    @Input() markDisabled:(date:Date) => boolean;\n    @Input() monthviewDisplayEventTemplate:TemplateRef<IMonthViewDisplayEventTemplateContext>;\n    @Input() monthviewInactiveDisplayEventTemplate:TemplateRef<IMonthViewDisplayEventTemplateContext>;\n    @Input() monthviewEventDetailTemplate:TemplateRef<IMonthViewEventDetailTemplateContext>;\n    @Input() weekviewHeaderTemplate:TemplateRef<IDisplayWeekViewHeader>;\n    @Input() weekviewAllDayEventTemplate:TemplateRef<IDisplayAllDayEvent>;\n    @Input() weekviewNormalEventTemplate:TemplateRef<IDisplayEvent>;\n    @Input() dayviewAllDayEventTemplate:TemplateRef<IDisplayAllDayEvent>;\n    @Input() dayviewNormalEventTemplate:TemplateRef<IDisplayEvent>;\n    @Input() weekviewAllDayEventSectionTemplate:TemplateRef<IWeekViewAllDayEventSectionTemplateContext>;\n    @Input() weekviewNormalEventSectionTemplate:TemplateRef<IWeekViewNormalEventSectionTemplateContext>;\n    @Input() dayviewAllDayEventSectionTemplate:TemplateRef<IDayViewAllDayEventSectionTemplateContext>;\n    @Input() dayviewNormalEventSectionTemplate:TemplateRef<IDayViewNormalEventSectionTemplateContext>;\n    @Input() weekviewInactiveAllDayEventSectionTemplate:TemplateRef<IWeekViewAllDayEventSectionTemplateContext>;\n    @Input() weekviewInactiveNormalEventSectionTemplate:TemplateRef<IWeekViewNormalEventSectionTemplateContext>;\n    @Input() dayviewInactiveAllDayEventSectionTemplate:TemplateRef<IDayViewAllDayEventSectionTemplateContext>;\n    @Input() dayviewInactiveNormalEventSectionTemplate:TemplateRef<IDayViewNormalEventSectionTemplateContext>;\n    @Input() dateFormatter:IDateFormatter;\n    @Input() dir:string = \"\";\n    @Input() scrollToHour:number = 0;\n    @Input() preserveScrollPosition:boolean = false;\n    @Input() lockSwipeToPrev:boolean = false;\n    @Input() lockSwipes:boolean = false;\n    @Input() locale:string = \"\";\n    @Input() startHour:number = 0;\n    @Input() endHour:number = 24;\n    @Input() sliderOptions:any;\n\n    @Output() onCurrentDateChanged = new EventEmitter<Date>();\n    @Output() onRangeChanged = new EventEmitter<IRange>();\n    @Output() onEventSelected = new EventEmitter<IEvent>();\n    @Output() onTimeSelected = new EventEmitter<ITimeSelected>();\n    @Output() onTitleChanged = new EventEmitter<string>();\n\n    private _currentDate:Date;\n    public hourParts = 1;\n    public hourSegments = 1;\n    private currentDateChangedFromChildrenSubscription:Subscription;\n\n    constructor(private calendarService:CalendarService, @Inject(LOCALE_ID) private appLocale:string) {\n        this.locale = appLocale;\n    }\n\n    ngOnInit() {\n        if (this.autoSelect) {\n            if (this.autoSelect.toString() === 'false') {\n                this.autoSelect = false;\n            } else {\n                this.autoSelect = true;\n            }\n        }\n        this.hourSegments = 60 / this.timeInterval;\n        this.hourParts = 60 / this.step;\n        if(this.hourParts <= this.hourSegments) {\n            this.hourParts = 1;\n        } else {\n            this.hourParts = this.hourParts / this.hourSegments;\n        }\n        this.startHour = parseInt(this.startHour.toString());\n        this.endHour = parseInt(this.endHour.toString());\n        this.calendarService.queryMode = this.queryMode;\n\n        this.currentDateChangedFromChildrenSubscription = this.calendarService.currentDateChangedFromChildren$.subscribe(currentDate => {\n            this._currentDate = currentDate;\n            this.onCurrentDateChanged.emit(currentDate);\n        });\n    }\n\n    ngOnDestroy() {\n        if (this.currentDateChangedFromChildrenSubscription) {\n            this.currentDateChangedFromChildrenSubscription.unsubscribe();\n            this.currentDateChangedFromChildrenSubscription = null;\n        }\n    }\n\n    rangeChanged(range:IRange) {\n        this.onRangeChanged.emit(range);\n    }\n\n    eventSelected(event:IEvent) {\n        this.onEventSelected.emit(event);\n    }\n\n    timeSelected(timeSelected:ITimeSelected) {\n        this.onTimeSelected.emit(timeSelected);\n    }\n\n    titleChanged(title:string) {\n        this.onTitleChanged.emit(title);\n    }\n\n    loadEvents() {\n        this.calendarService.loadEvents();\n    }\n\n    slideNext() {\n        this.calendarService.slide(1);\n    }\n\n    slidePrev() {\n        this.calendarService.slide(-1);\n    }\n\n    update() {\n        this.calendarService.update();\n    }\n}\n","import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    ElementRef,\n    SimpleChanges,\n    OnChanges,\n    AfterViewInit,\n    OnDestroy,\n    ViewEncapsulation\n} from '@angular/core';\n\n@Component({\n    selector: 'init-position-scroll',\n    template: `\n        <div class=\"scroll-content\" style=\"height:100%\">\n            <ng-content></ng-content>\n        </div>\n    `,\n    styles: [`\n        .scroll-content {\n            overflow-y: auto;\n            overflow-x: hidden;\n        }        \n    `],\n    encapsulation: ViewEncapsulation.None\n})\nexport class initPositionScrollComponent implements OnChanges, AfterViewInit, OnDestroy {\n    @Input() initPosition:number;\n    @Input() emitEvent:boolean;\n    @Output() onScroll = new EventEmitter<number>();\n\n    private element:ElementRef;\n    private scrollContent:HTMLElement;\n    private handler:()=>void;\n    private listenerAttached:boolean = false;\n\n    constructor(el:ElementRef) {\n        this.element = el;\n    }\n\n    ngOnChanges(changes:SimpleChanges) {\n        let initPosition = changes['initPosition'];\n        if (initPosition && initPosition.currentValue !== undefined && this.scrollContent) {\n            const me =this;\n            setTimeout(function() {\n                me.scrollContent.scrollTop = initPosition.currentValue;\n            }, 0);\n        }\n    }\n\n    ngAfterViewInit() {\n        const scrollContent = this.scrollContent = this.element.nativeElement.querySelector('.scroll-content');\n        if (this.initPosition !== undefined) {\n            scrollContent.scrollTop = this.initPosition;\n        }\n\n        if (this.emitEvent && !this.listenerAttached) {\n            let onScroll = this.onScroll;\n            this.handler = function () {\n                onScroll.emit(scrollContent.scrollTop);\n            };\n            this.listenerAttached = true;\n            scrollContent.addEventListener('scroll', this.handler);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.listenerAttached) {\n            this.scrollContent.removeEventListener('scroll', this.handler);\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { MonthViewComponent } from './monthview';\nimport { WeekViewComponent } from './weekview';\nimport { DayViewComponent } from './dayview';\nimport { CalendarComponent } from './calendar';\nimport { initPositionScrollComponent } from './init-position-scroll';\n\n@NgModule({\n    declarations: [\n        MonthViewComponent, WeekViewComponent, DayViewComponent, CalendarComponent, initPositionScrollComponent\n    ],\n    imports: [IonicModule, CommonModule],\n    exports: [CalendarComponent]\n})\nexport class NgCalendarModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {CalendarService as ɵb} from './calendar.service';\nexport {DayViewComponent as ɵd} from './dayview';\nexport {initPositionScrollComponent as ɵe} from './init-position-scroll';\nexport {MonthViewComponent as ɵa} from './monthview';\nexport {WeekViewComponent as ɵc} from './weekview';"],"names":[],"mappings":"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"}