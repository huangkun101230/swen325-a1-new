{"version":3,"sources":["webpack:///src/app/pages/profile/profile.page.html","webpack:///src/app/pages/profile/profile-routing.module.ts","webpack:///src/app/pages/profile/profile.module.ts","webpack:///src/app/pages/profile/profile.page.scss","webpack:///src/app/pages/profile/profile.page.ts"],"names":["routes","path","component","ProfilePageRoutingModule","imports","forChild","exports","ProfilePageModule","declarations","ProfilePage","alertCtrl","profileService","platform","toastController","userId","ready","then","listenChanges","getUserProfile","get","userProfileSnapshot","userProfile","data","slef","db","collection","onSnapshot","includeMetadataChanges","snapshot","eventSource","docChanges","forEach","change","type","updateProfile","create","subHeader","inputs","name","placeholder","value","firstName","lastName","buttons","text","handler","updateName","presentToast","error","alert","present","updateEmail","newEmail","password","updatePassword","newPassword","oldPassword","msg","status","message","duration","color","toast","selector","template"],"mappings":"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","file":"profile-profile-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/tabs/tab3\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Profile</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-list>\\n    <ion-item (click)=\\\"updateName()\\\">\\n      <ion-label>\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col class=\\\"text-left\\\" size=\\\"5\\\"> Name </ion-col>\\n            <ion-col class=\\\"text-right\\\" size=\\\"7\\\" *ngIf=\\\"userProfile?.firstName || userProfile?.lastName\\\">\\n              {{userProfile?.firstName}} {{userProfile?.lastName}} </ion-col>\\n            <ion-col size=\\\"7\\\" class=\\\"placeholder-profile text-right\\\" *ngIf=\\\"!userProfile?.firstName\\\">\\n              <span> Tap here to edit. </span> </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </ion-label>\\n    </ion-item>\\n\\n    <ion-item (click)=\\\"updateEmail()\\\">\\n      <ion-label>\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col class=\\\"text-left\\\" size=\\\"5\\\">Update Email </ion-col>\\n            <ion-col class=\\\"text-right\\\" size=\\\"7\\\" *ngIf=\\\"userProfile?.email\\\">\\n              {{userProfile?.email}} </ion-col>\\n            <ion-col size=\\\"7\\\" class=\\\"placeholder-profile text-right\\\" *ngIf=\\\"!userProfile?.email\\\" inputmode=\\\"email\\\">\\n              <span> Tap here to edit. </span> </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </ion-label>\\n    </ion-item>\\n\\n    <ion-item (click)=\\\"updatePassword()\\\">\\n      <ion-label>\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col class=\\\"text-left\\\" size=\\\"5\\\">Update Password </ion-col>\\n            <ion-col class=\\\"text-right\\\" size=\\\"7\\\" class=\\\"placeholder-profile text-right\\\" inputmode=\\\"password\\\">\\n              <span> Tap here to edit. </span> </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </ion-label>\\n    </ion-item>\\n\\n  </ion-list>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfilePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePageRoutingModule } from './profile-routing.module';\n\nimport { ProfilePage } from './profile.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProfilePageRoutingModule\n  ],\n  declarations: [ProfilePage]\n})\nexport class ProfilePageModule {}\n","export default \"ion-list-header {\\n  background-color: #ececec;\\n}\\n\\n.text-center {\\n  text-align: center;\\n}\\n\\n.text-left {\\n  text-align: left;\\n}\\n\\n.text-right {\\n  text-align: right;\\n}\\n\\n.placeholder-profile {\\n  color: #cccccc;\\n}\\n\\n.dob-label {\\n  color: #000000 !important;\\n  padding: 10px !important;\\n  max-width: 50% !important;\\n}\\n\\n.capitalize {\\n  text-transform: capitalize;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcHJvZmlsZS9wcm9maWxlLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHlCQUFBO0FBQ0Y7O0FBQ0E7RUFDRSxrQkFBQTtBQUVGOztBQUFBO0VBQ0UsZ0JBQUE7QUFHRjs7QUFEQTtFQUNFLGlCQUFBO0FBSUY7O0FBRkE7RUFDRSxjQUFBO0FBS0Y7O0FBSEE7RUFDRSx5QkFBQTtFQUNBLHdCQUFBO0VBQ0EseUJBQUE7QUFNRjs7QUFKQTtFQUNFLDBCQUFBO0FBT0YiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9wcm9maWxlL3Byb2ZpbGUucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWxpc3QtaGVhZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VjZWNlYztcbn1cbi50ZXh0LWNlbnRlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi50ZXh0LWxlZnQge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuLnRleHQtcmlnaHQge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cbi5wbGFjZWhvbGRlci1wcm9maWxlIHtcbiAgY29sb3I6ICNjY2NjY2M7XG59XG4uZG9iLWxhYmVsIHtcbiAgY29sb3I6ICMwMDAwMDAgIWltcG9ydGFudDtcbiAgcGFkZGluZzogMTBweCAhaW1wb3J0YW50O1xuICBtYXgtd2lkdGg6IDUwJSAhaW1wb3J0YW50O1xufVxuLmNhcGl0YWxpemUge1xuICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbn1cbiJdfQ== */\";","import { Component, OnInit } from \"@angular/core\";\nimport {\n  AlertController,\n  Platform,\n  ToastController,\n} from \"@ionic/angular\";\nimport { ProfileService } from \"../../services/user/profile.service\";\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"./profile.page.html\",\n  styleUrls: [\"./profile.page.scss\"],\n})\nexport class ProfilePage implements OnInit {\n  public userProfile: any;\n  userId = \"\";\n\n  constructor(\n    private alertCtrl: AlertController,\n    private profileService: ProfileService,\n    private platform: Platform,\n    public toastController: ToastController\n  ) {}\n\n  ngOnInit() {\n    this.platform.ready().then(() => {\n      this.listenChanges();\n    });\n  }\n\n  updateProfile() {\n    this.profileService\n      .getUserProfile()\n      .get()\n      .then((userProfileSnapshot) => {\n        this.userProfile = userProfileSnapshot.data();\n      });\n  }\n\n  listenChanges() {\n    let slef = this;\n    let db = firebase.firestore();\n    db.collection(`/userProfile/${this.userId}`).onSnapshot(\n      { includeMetadataChanges: true },\n      function (snapshot) {\n        this.eventSource = [];\n        snapshot.docChanges().forEach(function (change) {\n          if (change.type === \"added\" || change.type === \"modified\") {\n            slef.updateProfile();\n          }\n        });\n      }\n    );\n  }\n\n  async updateName(): Promise<void> {\n    const alert = await this.alertCtrl.create({\n      subHeader: \"Your first name & last name\",\n      inputs: [\n        {\n          type: \"text\",\n          name: \"firstName\",\n          placeholder: \"Your first name\",\n          value: this.userProfile.firstName,\n        },\n        {\n          type: \"text\",\n          name: \"lastName\",\n          placeholder: \"Your last name\",\n          value: this.userProfile.lastName,\n        },\n      ],\n      buttons: [\n        { text: \"Cancel\" },\n        {\n          text: \"Save\",\n          handler: (data) => {\n            this.profileService\n              .updateName(data.firstName, data.lastName)\n              .then(() => {\n                this.presentToast(\n                  \"Name Changed Successfully :)\",\n                  \"success\"\n                );\n              })\n              .catch((error) => {\n                // console.log(\"ERROR: \" + error.message);\n                this.presentToast(\n                  \"ERROR :(\",\n                  \"danger\"\n                );\n              });\n          },\n        },\n      ],\n    });\n    await alert.present();\n  }\n\n  async updateEmail(): Promise<void> {\n    const alert = await this.alertCtrl.create({\n      inputs: [\n        { type: \"text\", name: \"newEmail\", placeholder: \"Your new email\" },\n        { name: \"password\", placeholder: \"Your password\", type: \"password\" },\n      ],\n      buttons: [\n        { text: \"Cancel\" },\n        {\n          text: \"Save\",\n          handler: (data) => {\n            this.profileService\n              .updateEmail(data.newEmail, data.password)\n              .then(() => {\n                this.presentToast(\"Email Changed Successfully :)\", \"success\");\n                this.updateProfile();\n              })\n              .catch((error) => {\n                // console.log(\"ERROR: \" + error.message);\n                this.presentToast(\"ERROR :(\", \"danger\");\n              });\n          },\n        },\n      ],\n    });\n    await alert.present();\n  }\n\n  async updatePassword(): Promise<void> {\n    const alert = await this.alertCtrl.create({\n      inputs: [\n        { name: \"newPassword\", placeholder: \"New password\", type: \"password\" },\n        { name: \"oldPassword\", placeholder: \"Old password\", type: \"password\" },\n      ],\n      buttons: [\n        { text: \"Cancel\" },\n        {\n          text: \"Save\",\n          handler: (data) => {\n            this.profileService\n              .updatePassword(data.newPassword, data.oldPassword)\n              .then(() => {\n                this.presentToast(\n                  \"Password Changed Successfully :)\",\n                  \"success\"\n                );\n              })\n              .catch((error) => {\n                // console.log(\"ERROR: \" + error.message);\n                this.presentToast(\n                  \"ERROR :(\",\n                  \"danger\"\n                );\n              });\n          },\n        },\n      ],\n    });\n    await alert.present();\n  }\n\n  async presentToast(msg, status) {\n    const toast = await this.toastController.create({\n      message: msg,\n      duration: 1000,\n      color: status,\n    });\n    toast.present();\n  }\n}\n"]}