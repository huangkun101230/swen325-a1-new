{"version":3,"sources":["webpack:///src/app/pages/reset-password/reset-password.page.html","webpack:///src/app/pages/reset-password/reset-password-routing.module.ts","webpack:///src/app/pages/reset-password/reset-password.module.ts","webpack:///src/app/pages/reset-password/reset-password.page.scss","webpack:///src/app/pages/reset-password/reset-password.page.ts"],"names":["routes","path","component","ResetPasswordPageRoutingModule","imports","forChild","exports","ResetPasswordPageModule","declarations","ResetPasswordPage","authService","alertCtrl","formBuilder","router","resetPasswordForm","group","email","compose","required","valid","console","log","value","resetPassword","then","create","message","buttons","text","role","handler","navigateByUrl","alert","present","error","errorAlert","selector","template"],"mappings":"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","file":"reset-password-reset-password-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"tabs/tab3/login\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>reset-password</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <form [formGroup]=\\\"resetPasswordForm\\\">\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Email</ion-label>\\n      <ion-input formControlName=\\\"email\\\" type=\\\"email\\\" placeholder=\\\"Your email address\\\"\\n        [class.invalid]=\\\"!resetPasswordForm.controls['email'].valid && resetPasswordForm.controls['email'].touched\\\">\\n      </ion-input>\\n    </ion-item>\\n    <ion-item class=\\\"error-message\\\"\\n      *ngIf=\\\"!resetPasswordForm.controls['email'].valid && resetPasswordForm.controls['email'].touched\\\">\\n      <ion-label>Please enter a valid email.</ion-label>\\n    </ion-item>\\n    <ion-button expand=\\\"block\\\" (click)=\\\"resetPassword(resetPasswordForm)\\\" [disabled]=\\\"!resetPasswordForm.valid\\\">\\n      Reset your Password </ion-button>\\n  </form>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ResetPasswordPage } from './reset-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ResetPasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ResetPasswordPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ResetPasswordPageRoutingModule } from './reset-password-routing.module';\n\nimport { ResetPasswordPage } from './reset-password.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ResetPasswordPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [ResetPasswordPage]\n})\nexport class ResetPasswordPageModule {}\n","export default \"form {\\n  margin-bottom: 32px;\\n}\\nform button {\\n  margin-top: 20px !important;\\n}\\np {\\n  font-size: 0.8em;\\n  color: #d2d2d2;\\n}\\nion-label {\\n  margin-left: 5px;\\n}\\nion-input {\\n  padding: 5px;\\n}\\n.invalid {\\n  border-bottom: 1px solid #ff6153;\\n}\\n.error-message {\\n  min-height: 2.2rem;\\n}\\n.error-message ion-label {\\n  margin: 2px 0;\\n  font-size: 60%;\\n  color: #ff6153;\\n}\\n.error-message .item-inner {\\n  border-bottom: 0 !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcmVzZXQtcGFzc3dvcmQvcmVzZXQtcGFzc3dvcmQucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQUE7QUFDRjtBQUFFO0VBQ0UsMkJBQUE7QUFFSjtBQUNBO0VBQ0UsZ0JBQUE7RUFDQSxjQUFBO0FBRUY7QUFBQTtFQUNFLGdCQUFBO0FBR0Y7QUFEQTtFQUNFLFlBQUE7QUFJRjtBQUZBO0VBQ0UsZ0NBQUE7QUFLRjtBQUhBO0VBQ0Usa0JBQUE7QUFNRjtBQUxFO0VBQ0UsYUFBQTtFQUNBLGNBQUE7RUFDQSxjQUFBO0FBT0o7QUFMRTtFQUNFLDJCQUFBO0FBT0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9yZXNldC1wYXNzd29yZC9yZXNldC1wYXNzd29yZC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJmb3JtIHtcbiAgbWFyZ2luLWJvdHRvbTogMzJweDtcbiAgYnV0dG9uIHtcbiAgICBtYXJnaW4tdG9wOiAyMHB4ICFpbXBvcnRhbnQ7XG4gIH1cbn1cbnAge1xuICBmb250LXNpemU6IDAuOGVtO1xuICBjb2xvcjogI2QyZDJkMjtcbn1cbmlvbi1sYWJlbCB7XG4gIG1hcmdpbi1sZWZ0OiA1cHg7XG59XG5pb24taW5wdXQge1xuICBwYWRkaW5nOiA1cHg7XG59XG4uaW52YWxpZCB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZmY2MTUzO1xufVxuLmVycm9yLW1lc3NhZ2Uge1xuICBtaW4taGVpZ2h0OiAyLjJyZW07XG4gIGlvbi1sYWJlbCB7XG4gICAgbWFyZ2luOiAycHggMDtcbiAgICBmb250LXNpemU6IDYwJTtcbiAgICBjb2xvcjogI2ZmNjE1MztcbiAgfVxuICAuaXRlbS1pbm5lciB7XG4gICAgYm9yZGVyLWJvdHRvbTogMCAhaW1wb3J0YW50O1xuICB9XG59XG4iXX0= */\";","import { Component, OnInit } from \"@angular/core\";\nimport { AuthService } from \"../../services/user/auth.service\";\nimport { AlertController } from \"@ionic/angular\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-reset-password\",\n  templateUrl: \"./reset-password.page.html\",\n  styleUrls: [\"./reset-password.page.scss\"],\n})\nexport class ResetPasswordPage implements OnInit {\n  public resetPasswordForm: FormGroup;\n  constructor(\n    private authService: AuthService,\n    private alertCtrl: AlertController,\n    private formBuilder: FormBuilder,\n    private router: Router\n  ) {\n    this.resetPasswordForm = this.formBuilder.group({\n      email: [\"\", Validators.compose([Validators.required, Validators.email])],\n    });\n  }\n\n  ngOnInit() {}\n\n  resetPassword(resetPasswordForm: FormGroup): void {\n    if (!resetPasswordForm.valid) {\n      console.log(\n        \"Form is not valid yet, current value:\",\n        resetPasswordForm.value\n      );\n    } else {\n      const email: string = resetPasswordForm.value.email;  //take value of the form field\n      this.authService.resetPassword(email).then( //send it to the AuthService\n        async () => {\n          const alert = await this.alertCtrl.create({\n            message: \"Check your email for a password reset link\",\n            buttons: [\n              {\n                text: \"Ok\",\n                role: \"cancel\",\n                handler: () => {\n                  this.router.navigateByUrl(\"/tabs/tab3/login\");\n                },\n              },\n            ],\n          });\n          await alert.present();\n        },\n        async (error) => {\n          const errorAlert = await this.alertCtrl.create({\n            message: error.message,\n            buttons: [{ text: \"Ok\", role: \"cancel\" }],\n          });\n          await errorAlert.present();\n        }\n      );\n    }\n  }\n}\n"]}