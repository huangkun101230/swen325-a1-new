{"version":3,"sources":["./src/app/pages/tab2/tab2.page.html","./src/app/pages/tab2/tab2-routing.module.ts","./src/app/pages/tab2/tab2.module.ts","./src/app/pages/tab2/tab2.page.scss","./src/app/pages/tab2/tab2.page.ts"],"names":[],"mappings":"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","file":"tab2-tab2-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>Assignment List</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <!-- Card for adding a new event -->\\n  <ion-card>\\n    <ion-card-header tappable (click)=\\\"collapseCard = !collapseCard\\\">\\n      <ion-card-title>New Event</ion-card-title>\\n    </ion-card-header>\\n  <ion-card-content *ngIf=\\\"!collapseCard\\\">\\n    <ion-item>\\n      <ion-input type=\\\"text\\\" placeholder=\\\"Course Code\\\" [(ngModel)]=\\\"courseName\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-input type=\\\"text\\\" placeholder=\\\"Assignment Title\\\" [(ngModel)]=\\\"eventName\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Start</ion-label>\\n      <ion-datetime displayFormat=\\\"DD/MM/YYYY HH:mm\\\" pickerFormat=\\\"D MMM:HH:mm\\\" [(ngModel)]=\\\"startTime\\\" [min]=\\\"minDate\\\">\\n      </ion-datetime>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>End</ion-label>\\n      <ion-datetime displayFormat=\\\"DD/MM/YYYY HH:mm\\\" pickerFormat=\\\"D MMM:HH:mm\\\" [(ngModel)]=\\\"endTime\\\" [min]=\\\"minDate\\\">\\n      </ion-datetime>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>All Day?</ion-label>\\n      <ion-checkbox [(ngModel)]=\\\"allDay\\\"></ion-checkbox>\\n    </ion-item>\\n    <ion-button fill=\\\"outline\\\" expand=\\\"block\\\" (click)=\\\"addEvent(courseName, eventName, startTime, endTime, allDay)\\\">\\n      Add Event </ion-button>\\n  </ion-card-content>\\n  </ion-card>\\n\\n  <!-- List of Sliding Items -->\\n  <ion-list>\\n    <ion-list-header>\\n      <ion-label>Your next events</ion-label>\\n    </ion-list-header>\\n    <ion-item tappable *ngFor=\\\"let event of eventList\\\" routerLink=\\\"/tabs/tab2/detail/{{ event.id }}\\\">\\n      <ion-label>\\n        <h2>{{event?.courseName}}</h2>\\n        <h3> {{ event?.eventName }} </h3>\\n        <p>Due Date: <strong>{{formatTime(event)}}</strong></p>\\n      </ion-label>\\n      <ion-item-options side=\\\"end\\\">\\n        <ion-item-option (click)=\\\"finish(event)\\\">Finished!</ion-item-option>\\n      </ion-item-options>\\n    </ion-item>\\n  </ion-list>\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { Tab2Page } from './tab2.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Tab2Page\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class Tab2PageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { Tab2PageRoutingModule } from './tab2-routing.module';\n\nimport { Tab2Page } from './tab2.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    Tab2PageRoutingModule,\n  ],\n  declarations: [Tab2Page],\n  exports: []\n})\nexport class Tab2PageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3RhYjIvdGFiMi5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit, Inject, LOCALE_ID, ViewChild } from \"@angular/core\";\nimport { Router, NavigationExtras, ActivatedRoute } from \"@angular/router\";\nimport { formatDate } from \"@angular/common\";\nimport { EventService } from \"./../../services/user/event.service\";\nimport { Platform } from \"@ionic/angular\";\n\n@Component({\n  selector: \"app-tab2\",\n  templateUrl: \"./tab2.page.html\",\n  styleUrls: [\"./tab2.page.scss\"],\n})\nexport class Tab2Page implements OnInit {\n  courseName: string = \"\";\n  eventName: string = \"\";\n  startTime = new Date().toISOString();\n  endTime = new Date().toISOString();\n  allDay: boolean = false;\n\n  //can only add new event after today\n  minDate = new Date().toISOString();\n  public collapseCard = true;\n  public eventList: Array<any>; //hold the list\n\n  constructor(\n    private platform: Platform,\n    private router: Router,\n    private eventService: EventService, //call the services function\n    @Inject(LOCALE_ID) private locale: string\n  ) {\n    this.platform.ready().then(() => {\n      this.updateList();\n    });\n  }\n\n  ngOnInit() {\n    \n    this.platform.ready().then(() => {\n      this.updateList();\n    });\n  }\n\n  updateList() {\n    this.eventService\n      .getEventList() //get the list from service\n      .get()\n      .then((eventListSnapshot) => {\n        this.eventList = [];\n        eventListSnapshot.forEach((snap) => {\n          this.eventList.push({\n            //push every record into our eventList array\n            id: snap.id,\n            courseName: snap.data().courseName,\n            eventName: snap.data().eventName,\n            startTime: snap.data().startTime,\n            endTime: snap.data().endTime,\n            allDay: snap.data().allDay,\n          });\n          return false;\n        });\n      });\n  }\n\n  addEvent(\n    courseName: string,\n    eventName: string,\n    startTime: string,\n    endTime: string,\n    allday: boolean\n  ): void {\n    if (\n      courseName === undefined ||\n      eventName === undefined ||\n      startTime === undefined ||\n      endTime === undefined ||\n      allday === undefined\n    ) {\n      return;\n    }\n    this.eventService\n      .addEvent(courseName, eventName, startTime, endTime, allday)\n      .then(() => {\n        this.router.navigateByUrl(\"\");\n        this.updateList();\n        this.resetEvent();\n      });\n\n    //close the \"new event collapseCard\"\n    this.collapseCard = true;\n  }\n\n  resetEvent() {\n    this.courseName = \"\";\n    this.eventName = \"\";\n    this.startTime = new Date().toISOString();\n    this.endTime = new Date().toISOString();\n    this.allDay = false;\n  }\n\n  formatTime(event) {\n    let end = formatDate(event.endTime, \"medium\", this.locale);\n    return end;\n  }\n\n  finish(event) {\n    this.eventService.removeEvent(event.id);\n  }\n}\n"],"sourceRoot":"webpack:///"}