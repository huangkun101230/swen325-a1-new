{"version":3,"sources":["webpack:///src/app/pages/tab2/tab2.page.html","webpack:///src/app/pages/tab2/tab2-routing.module.ts","webpack:///src/app/pages/tab2/tab2.module.ts","webpack:///src/app/pages/tab2/tab2.page.scss","webpack:///src/app/pages/tab2/tab2.page.ts"],"names":["routes","path","component","Tab2PageRoutingModule","imports","forChild","exports","Tab2PageModule","declarations","Tab2Page","platform","router","eventService","locale","courseName","eventName","startTime","Date","toISOString","endTime","allDay","minDate","collapseCard","ready","then","updateList","getEventList","get","eventListSnapshot","eventList","forEach","snap","push","id","data","allday","undefined","addEvent","navigateByUrl","resetEvent","event","end","removeEvent","selector","template"],"mappings":"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","file":"tab2-tab2-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>Assignment List</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <!-- Card for adding a new event -->\\n  <ion-card>\\n    <ion-card-header tappable (click)=\\\"collapseCard = !collapseCard\\\">\\n      <ion-card-title>New Event</ion-card-title>\\n    </ion-card-header>\\n  <ion-card-content *ngIf=\\\"!collapseCard\\\">\\n    <ion-item>\\n      <ion-input type=\\\"text\\\" placeholder=\\\"Course Code\\\" [(ngModel)]=\\\"courseName\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-input type=\\\"text\\\" placeholder=\\\"Assignment Title\\\" [(ngModel)]=\\\"eventName\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Start</ion-label>\\n      <ion-datetime displayFormat=\\\"DD/MM/YYYY HH:mm\\\" pickerFormat=\\\"D MMM:HH:mm\\\" [(ngModel)]=\\\"startTime\\\" [min]=\\\"minDate\\\">\\n      </ion-datetime>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>End</ion-label>\\n      <ion-datetime displayFormat=\\\"DD/MM/YYYY HH:mm\\\" pickerFormat=\\\"D MMM:HH:mm\\\" [(ngModel)]=\\\"endTime\\\" [min]=\\\"minDate\\\">\\n      </ion-datetime>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>All Day?</ion-label>\\n      <ion-checkbox [(ngModel)]=\\\"allDay\\\"></ion-checkbox>\\n    </ion-item>\\n    <ion-button fill=\\\"outline\\\" expand=\\\"block\\\" (click)=\\\"addEvent(courseName, eventName, startTime, endTime, allDay)\\\">\\n      Add Event </ion-button>\\n  </ion-card-content>\\n  </ion-card>\\n\\n  <!-- List of Sliding Items -->\\n  <ion-list>\\n    <ion-list-header>\\n      <ion-label>Your next events</ion-label>\\n    </ion-list-header>\\n    <ion-item tappable *ngFor=\\\"let event of eventList\\\" routerLink=\\\"/tabs/tab2/detail/{{ event.id }}\\\">\\n      <ion-label>\\n        <h2>{{event?.courseName}}</h2>\\n        <h3> {{ event?.eventName }} </h3>\\n        <p>Due Date: <strong>{{formatTime(event)}}</strong></p>\\n      </ion-label>\\n      <ion-item-options side=\\\"end\\\">\\n        <ion-item-option (click)=\\\"finish(event)\\\">Finished!</ion-item-option>\\n      </ion-item-options>\\n    </ion-item>\\n  </ion-list>\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { Tab2Page } from './tab2.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Tab2Page\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class Tab2PageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { Tab2PageRoutingModule } from './tab2-routing.module';\n\nimport { Tab2Page } from './tab2.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    Tab2PageRoutingModule,\n  ],\n  declarations: [Tab2Page],\n  exports: []\n})\nexport class Tab2PageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3RhYjIvdGFiMi5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit, Inject, LOCALE_ID, ViewChild } from \"@angular/core\";\nimport { Router, NavigationExtras, ActivatedRoute } from \"@angular/router\";\nimport { formatDate } from \"@angular/common\";\nimport { EventService } from \"./../../services/user/event.service\";\nimport { Platform } from \"@ionic/angular\";\n\n@Component({\n  selector: \"app-tab2\",\n  templateUrl: \"./tab2.page.html\",\n  styleUrls: [\"./tab2.page.scss\"],\n})\nexport class Tab2Page implements OnInit {\n  courseName: string = \"\";\n  eventName: string = \"\";\n  startTime = new Date().toISOString();\n  endTime = new Date().toISOString();\n  allDay: boolean = false;\n\n  //can only add new event after today\n  minDate = new Date().toISOString();\n  public collapseCard = true;\n  public eventList: Array<any>; //hold the list\n\n  constructor(\n    private platform: Platform,\n    private router: Router,\n    private eventService: EventService, //call the services function\n    @Inject(LOCALE_ID) private locale: string\n  ) {\n    this.platform.ready().then(() => {\n      this.updateList();\n    });\n  }\n\n  ngOnInit() {\n    \n    this.platform.ready().then(() => {\n      this.updateList();\n    });\n  }\n\n  updateList() {\n    this.eventService\n      .getEventList() //get the list from service\n      .get()\n      .then((eventListSnapshot) => {\n        this.eventList = [];\n        eventListSnapshot.forEach((snap) => {\n          this.eventList.push({\n            //push every record into our eventList array\n            id: snap.id,\n            courseName: snap.data().courseName,\n            eventName: snap.data().eventName,\n            startTime: snap.data().startTime,\n            endTime: snap.data().endTime,\n            allDay: snap.data().allDay,\n          });\n          return false;\n        });\n      });\n  }\n\n  addEvent(\n    courseName: string,\n    eventName: string,\n    startTime: string,\n    endTime: string,\n    allday: boolean\n  ): void {\n    if (\n      courseName === undefined ||\n      eventName === undefined ||\n      startTime === undefined ||\n      endTime === undefined ||\n      allday === undefined\n    ) {\n      return;\n    }\n    this.eventService\n      .addEvent(courseName, eventName, startTime, endTime, allday)\n      .then(() => {\n        this.router.navigateByUrl(\"\");\n        this.updateList();\n        this.resetEvent();\n      });\n\n    //close the \"new event collapseCard\"\n    this.collapseCard = true;\n  }\n\n  resetEvent() {\n    this.courseName = \"\";\n    this.eventName = \"\";\n    this.startTime = new Date().toISOString();\n    this.endTime = new Date().toISOString();\n    this.allDay = false;\n  }\n\n  formatTime(event) {\n    let end = formatDate(event.endTime, \"medium\", this.locale);\n    return end;\n  }\n\n  finish(event) {\n    this.eventService.removeEvent(event.id);\n  }\n}\n"]}