{"version":3,"sources":["./src/app/pages/reset-password/reset-password.page.html","./src/app/pages/reset-password/reset-password-routing.module.ts","./src/app/pages/reset-password/reset-password.module.ts","./src/app/pages/reset-password/reset-password.page.scss","./src/app/pages/reset-password/reset-password.page.ts"],"names":[],"mappings":"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","file":"reset-password-reset-password-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"tabs/tab3/login\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>reset-password</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <form [formGroup]=\\\"resetPasswordForm\\\">\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Email</ion-label>\\n      <ion-input formControlName=\\\"email\\\" type=\\\"email\\\" placeholder=\\\"Your email address\\\"\\n        [class.invalid]=\\\"!resetPasswordForm.controls['email'].valid && resetPasswordForm.controls['email'].touched\\\">\\n      </ion-input>\\n    </ion-item>\\n    <ion-item class=\\\"error-message\\\"\\n      *ngIf=\\\"!resetPasswordForm.controls['email'].valid && resetPasswordForm.controls['email'].touched\\\">\\n      <ion-label>Please enter a valid email.</ion-label>\\n    </ion-item>\\n    <ion-button expand=\\\"block\\\" (click)=\\\"resetPassword(resetPasswordForm)\\\" [disabled]=\\\"!resetPasswordForm.valid\\\">\\n      Reset your Password </ion-button>\\n  </form>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ResetPasswordPage } from './reset-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ResetPasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ResetPasswordPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ResetPasswordPageRoutingModule } from './reset-password-routing.module';\n\nimport { ResetPasswordPage } from './reset-password.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ResetPasswordPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [ResetPasswordPage]\n})\nexport class ResetPasswordPageModule {}\n","export default \"form {\\n  margin-bottom: 32px;\\n}\\nform button {\\n  margin-top: 20px !important;\\n}\\np {\\n  font-size: 0.8em;\\n  color: #d2d2d2;\\n}\\nion-label {\\n  margin-left: 5px;\\n}\\nion-input {\\n  padding: 5px;\\n}\\n.invalid {\\n  border-bottom: 1px solid #ff6153;\\n}\\n.error-message {\\n  min-height: 2.2rem;\\n}\\n.error-message ion-label {\\n  margin: 2px 0;\\n  font-size: 60%;\\n  color: #ff6153;\\n}\\n.error-message .item-inner {\\n  border-bottom: 0 !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcmVzZXQtcGFzc3dvcmQvcmVzZXQtcGFzc3dvcmQucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQUE7QUFDRjtBQUFFO0VBQ0UsMkJBQUE7QUFFSjtBQUNBO0VBQ0UsZ0JBQUE7RUFDQSxjQUFBO0FBRUY7QUFBQTtFQUNFLGdCQUFBO0FBR0Y7QUFEQTtFQUNFLFlBQUE7QUFJRjtBQUZBO0VBQ0UsZ0NBQUE7QUFLRjtBQUhBO0VBQ0Usa0JBQUE7QUFNRjtBQUxFO0VBQ0UsYUFBQTtFQUNBLGNBQUE7RUFDQSxjQUFBO0FBT0o7QUFMRTtFQUNFLDJCQUFBO0FBT0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9yZXNldC1wYXNzd29yZC9yZXNldC1wYXNzd29yZC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJmb3JtIHtcbiAgbWFyZ2luLWJvdHRvbTogMzJweDtcbiAgYnV0dG9uIHtcbiAgICBtYXJnaW4tdG9wOiAyMHB4ICFpbXBvcnRhbnQ7XG4gIH1cbn1cbnAge1xuICBmb250LXNpemU6IDAuOGVtO1xuICBjb2xvcjogI2QyZDJkMjtcbn1cbmlvbi1sYWJlbCB7XG4gIG1hcmdpbi1sZWZ0OiA1cHg7XG59XG5pb24taW5wdXQge1xuICBwYWRkaW5nOiA1cHg7XG59XG4uaW52YWxpZCB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZmY2MTUzO1xufVxuLmVycm9yLW1lc3NhZ2Uge1xuICBtaW4taGVpZ2h0OiAyLjJyZW07XG4gIGlvbi1sYWJlbCB7XG4gICAgbWFyZ2luOiAycHggMDtcbiAgICBmb250LXNpemU6IDYwJTtcbiAgICBjb2xvcjogI2ZmNjE1MztcbiAgfVxuICAuaXRlbS1pbm5lciB7XG4gICAgYm9yZGVyLWJvdHRvbTogMCAhaW1wb3J0YW50O1xuICB9XG59XG4iXX0= */\";","import { Component, OnInit } from \"@angular/core\";\nimport { AuthService } from \"../../services/user/auth.service\";\nimport { AlertController } from \"@ionic/angular\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-reset-password\",\n  templateUrl: \"./reset-password.page.html\",\n  styleUrls: [\"./reset-password.page.scss\"],\n})\nexport class ResetPasswordPage implements OnInit {\n  public resetPasswordForm: FormGroup;\n  constructor(\n    private authService: AuthService,\n    private alertCtrl: AlertController,\n    private formBuilder: FormBuilder,\n    private router: Router\n  ) {\n    this.resetPasswordForm = this.formBuilder.group({\n      email: [\"\", Validators.compose([Validators.required, Validators.email])],\n    });\n  }\n\n  ngOnInit() {}\n\n  resetPassword(resetPasswordForm: FormGroup): void {\n    if (!resetPasswordForm.valid) {\n      console.log(\n        \"Form is not valid yet, current value:\",\n        resetPasswordForm.value\n      );\n    } else {\n      const email: string = resetPasswordForm.value.email;  //take value of the form field\n      this.authService.resetPassword(email).then( //send it to the AuthService\n        async () => {\n          const alert = await this.alertCtrl.create({\n            message: \"Check your email for a password reset link\",\n            buttons: [\n              {\n                text: \"Ok\",\n                role: \"cancel\",\n                handler: () => {\n                  this.router.navigateByUrl(\"/tabs/tab3/login\");\n                },\n              },\n            ],\n          });\n          await alert.present();\n        },\n        async (error) => {\n          const errorAlert = await this.alertCtrl.create({\n            message: error.message,\n            buttons: [{ text: \"Ok\", role: \"cancel\" }],\n          });\n          await errorAlert.present();\n        }\n      );\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}