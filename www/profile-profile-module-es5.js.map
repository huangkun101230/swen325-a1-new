{"version":3,"sources":["webpack:///src/app/pages/profile/profile.page.html","webpack:///src/app/pages/profile/profile-routing.module.ts","webpack:///src/app/pages/profile/profile.module.ts","webpack:///src/app/pages/profile/profile.page.scss","webpack:///src/app/pages/profile/profile.page.ts","webpack:///src/app/services/user/profile.service.ts"],"names":["routes","path","component","ProfilePageRoutingModule","imports","forChild","exports","ProfilePageModule","declarations","ProfilePage","alertCtrl","authService","profileService","router","platform","ready","then","getUserProfile","get","userProfileSnapshot","userProfile","data","create","subHeader","inputs","type","name","placeholder","value","firstName","lastName","buttons","text","handler","updateName","alert","present","updateEmail","newEmail","password","console","log","error","message","updatePassword","newPassword","oldPassword","selector","template","ProfileService","onAuthStateChanged","user","currentUser","doc","uid","update","credential","EmailAuthProvider","email","reauthenticateWithCredential","providedIn"],"mappings":"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","file":"profile-profile-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/tabs/tab3\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>profile</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-list>\\n    <ion-list-header> Personal Information </ion-list-header>\\n\\n    <ion-item (click)=\\\"updateName()\\\">\\n      <ion-label>\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col class=\\\"text-left\\\" size=\\\"5\\\"> Name </ion-col>\\n            <ion-col class=\\\"text-right\\\" size=\\\"7\\\" *ngIf=\\\"userProfile?.firstName || userProfile?.lastName\\\">\\n              {{userProfile?.firstName}} {{userProfile?.lastName}} </ion-col>\\n            <ion-col size=\\\"7\\\" class=\\\"placeholder-profile text-right\\\" *ngIf=\\\"!userProfile?.firstName\\\">\\n              <span> Tap here to edit. </span> </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </ion-label>\\n    </ion-item>\\n\\n    <ion-item (click)=\\\"updateEmail()\\\">\\n      <ion-label>\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col class=\\\"text-left\\\" size=\\\"5\\\">Update Email </ion-col>\\n            <ion-col class=\\\"text-right\\\" size=\\\"7\\\" *ngIf=\\\"userProfile?.email\\\">\\n              {{userProfile?.email}} </ion-col>\\n            <ion-col size=\\\"7\\\" class=\\\"placeholder-profile text-right\\\" *ngIf=\\\"!userProfile?.email\\\">\\n              <span> Tap here to edit. </span> </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </ion-label>\\n    </ion-item>\\n\\n    <ion-item (click)=\\\"updatePassword()\\\">\\n      <ion-label>\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col class=\\\"text-left\\\" size=\\\"5\\\">Update Password </ion-col>\\n            <ion-col class=\\\"text-right\\\" size=\\\"7\\\" class=\\\"placeholder-profile text-right\\\">\\n              <span> Tap here to edit. </span> </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </ion-label>\\n    </ion-item>\\n\\n  </ion-list>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfilePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePageRoutingModule } from './profile-routing.module';\n\nimport { ProfilePage } from './profile.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProfilePageRoutingModule\n  ],\n  declarations: [ProfilePage]\n})\nexport class ProfilePageModule {}\n","export default \"ion-list-header {\\n  background-color: #ececec;\\n}\\n\\n.text-center {\\n  text-align: center;\\n}\\n\\n.text-left {\\n  text-align: left;\\n}\\n\\n.text-right {\\n  text-align: right;\\n}\\n\\n.placeholder-profile {\\n  color: #cccccc;\\n}\\n\\n.dob-label {\\n  color: #000000 !important;\\n  padding: 10px !important;\\n  max-width: 50% !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcHJvZmlsZS9wcm9maWxlLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHlCQUFBO0FBQ0Y7O0FBQ0E7RUFDRSxrQkFBQTtBQUVGOztBQUFBO0VBQ0UsZ0JBQUE7QUFHRjs7QUFEQTtFQUNFLGlCQUFBO0FBSUY7O0FBRkE7RUFDRSxjQUFBO0FBS0Y7O0FBSEE7RUFDRSx5QkFBQTtFQUNBLHdCQUFBO0VBQ0EseUJBQUE7QUFNRiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2ZpbGUvcHJvZmlsZS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tbGlzdC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWNlY2VjO1xufVxuLnRleHQtY2VudGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLnRleHQtbGVmdCB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG4udGV4dC1yaWdodCB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuLnBsYWNlaG9sZGVyLXByb2ZpbGUge1xuICBjb2xvcjogI2NjY2NjYztcbn1cbi5kb2ItbGFiZWwge1xuICBjb2xvcjogIzAwMDAwMCAhaW1wb3J0YW50O1xuICBwYWRkaW5nOiAxMHB4ICFpbXBvcnRhbnQ7XG4gIG1heC13aWR0aDogNTAlICFpbXBvcnRhbnQ7XG59XG4iXX0= */\";","import { Component, OnInit } from \"@angular/core\";\nimport { AlertController, Platform } from \"@ionic/angular\";\nimport { AuthService } from \"../../services/user/auth.service\";\nimport { ProfileService } from \"../../services/user/profile.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"./profile.page.html\",\n  styleUrls: [\"./profile.page.scss\"],\n})\nexport class ProfilePage implements OnInit {\n  public userProfile: any;\n\n  constructor(\n    private alertCtrl: AlertController,\n    private authService: AuthService,\n    private profileService: ProfileService,\n    private router: Router,\n    private platform: Platform\n  ) {}\n\n  ngOnInit() {\n    this.platform.ready().then(() => {\n      this.profileService\n        .getUserProfile()\n        .get()\n        .then((userProfileSnapshot) => {\n          this.userProfile = userProfileSnapshot.data();\n        });\n    });\n  }\n\n  async updateName(): Promise<void> {\n    const alert = await this.alertCtrl.create({\n      subHeader: \"Your first name & last name\",\n      inputs: [\n        {\n          type: \"text\",\n          name: \"firstName\",\n          placeholder: \"Your first name\",\n          value: this.userProfile.firstName,\n        },\n        {\n          type: \"text\",\n          name: \"lastName\",\n          placeholder: \"Your last name\",\n          value: this.userProfile.lastName,\n        },\n      ],\n      buttons: [\n        { text: \"Cancel\" },\n        {\n          text: \"Save\",\n          handler: (data) => {\n            this.profileService.updateName(data.firstName, data.lastName);\n          },\n        },\n      ],\n    });\n    await alert.present();\n  }\n\n  async updateEmail(): Promise<void> {\n    const alert = await this.alertCtrl.create({\n      inputs: [\n        { type: \"text\", name: \"newEmail\", placeholder: \"Your new email\" },\n        { name: \"password\", placeholder: \"Your password\", type: \"password\" },\n      ],\n      buttons: [\n        { text: \"Cancel\" },\n        {\n          text: \"Save\",\n          handler: (data) => {\n            this.profileService\n              .updateEmail(data.newEmail, data.password)\n              .then(() => {\n                console.log(\"Email Changed Successfully\");\n              })\n              .catch((error) => {\n                console.log(\"ERROR: \" + error.message);\n              });\n          },\n        },\n      ],\n    });\n    await alert.present();\n  }\n\n  async updatePassword(): Promise<void> {\n    const alert = await this.alertCtrl.create({\n      inputs: [\n        { name: \"newPassword\", placeholder: \"New password\", type: \"password\" },\n        { name: \"oldPassword\", placeholder: \"Old password\", type: \"password\" },\n      ],\n      buttons: [\n        { text: \"Cancel\" },\n        {\n          text: \"Save\",\n          handler: (data) => {\n            this.profileService.updatePassword(\n              data.newPassword,\n              data.oldPassword\n            );\n          },\n        },\n      ],\n    });\n    await alert.present();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ProfileService {\n  public userProfile: firebase.firestore.DocumentReference;\n  public currentUser: firebase.User;\n\n  constructor() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.currentUser = user;\n        this.userProfile = firebase.firestore().doc(`/userProfile/${user.uid}`);\n      }\n    });\n  }\n\n  getUserProfile(): firebase.firestore.DocumentReference {\n    return this.userProfile;\n  }\n\n  updateName(firstName: string, lastName: string): Promise<any> {\n    return this.userProfile.update({ firstName, lastName });\n  }\n\n  updateEmail(newEmail: string, password: string): Promise<any> {\n    const credential: firebase.auth.AuthCredential = firebase.auth.EmailAuthProvider.credential(\n      this.currentUser.email,\n      password\n    );\n    return this.currentUser\n      .reauthenticateWithCredential(credential)\n      .then(() => {\n        this.currentUser.updateEmail(newEmail).then(() => {\n          this.userProfile.update({ email: newEmail });\n        });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  updatePassword(newPassword: string, oldPassword: string): Promise<any> {\n    const credential: firebase.auth.AuthCredential = firebase.auth.EmailAuthProvider.credential(\n      this.currentUser.email,\n      oldPassword\n    );\n    return this.currentUser\n      .reauthenticateWithCredential(credential)\n      .then(() => {\n        this.currentUser.updatePassword(newPassword).then(() => {\n          console.log(\"Password Changed\");\n        });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n}\n"]}